{"remainingRequest":"F:\\github\\guetsurveystar\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\github\\guetsurveystar\\src\\components\\questionnaire\\MainQuestionList.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\github\\guetsurveystar\\src\\components\\questionnaire\\MainQuestionList.vue","mtime":1593262801913},{"path":"F:\\github\\guetsurveystar\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\github\\guetsurveystar\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"F:\\github\\guetsurveystar\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\github\\guetsurveystar\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBRdWVzdGlvbiBmcm9tICIuL1F1ZXN0aW9uIjsKaW1wb3J0IENsaXBib2FyZCBmcm9tICdjbGlwYm9hcmQnOwoKZXhwb3J0IGRlZmF1bHQgewogICAgbmFtZTogIk1haW5RdWVzdGlvbkxpc3QiLAogICAgY29tcG9uZW50czoge1F1ZXN0aW9ufSwKCiAgICBkYXRhOiBmdW5jdGlvbiAoKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgcXVlc3Rpb25MaXN0OiBbXSwKICAgICAgICAgICAgcXVlc3Rpb25uYWlyZTogewogICAgICAgICAgICAgICAgaXNCb3hTZWxlY3RlZDogZmFsc2UsCiAgICAgICAgICAgICAgICBsZXNzb25ObzogIiIsCiAgICAgICAgICAgICAgICBxdWVzdGlvbm5haXJlVGl0bGU6ICLor7fovpPlhaXmoIfpopgiLAogICAgICAgICAgICAgICAgdGltZTpbbmV3IERhdGUoKSxuZXcgRGF0ZSgpXSwKICAgICAgICAgICAgICAgIG15bGVzc29uczpbXQogICAgICAgICAgICB9LAogICAgICAgICAgICBkZWxldGVWaXNpYmxlOiBmYWxzZSwKICAgICAgICAgICAgZGVsZXRlZDogZmFsc2UsCiAgICAgICAgICAgIHJlbGVhc2VWaXNpYmxlOiBmYWxzZSwKICAgICAgICAgICAgaGFja1Jlc2V0OnRydWUsCiAgICAgICAgICAgIHF1ZXN0aW9ubmFpcmVUeXBlOiAwLAogICAgICAgICAgICBjb3Vyc2VHb2FsczogW10sCiAgICAgICAgICAgIGNvdXJzZU5vOicnCiAgICAgICAgfQogICAgfSwKCiAgICBtZXRob2RzOiB7CiAgICAgICAgZmV0Y2hEYXRhKCkgewogICAgICAgICAgICB0aGlzLiRodHRwLmdldCgiL2NvdXJzZS9teWxlc3NvbiIsIHt9KS50aGVuKChyZXMpID0+IHsKICAgICAgICAgICAgICAgIGNvbnN0IGxlc3NvbnMgPSByZXMuZGF0YS5kYXRhLmxlc3NvbnMKICAgICAgICAgICAgICAgIGZvciAoY29uc3QgdCBvZiBsZXNzb25zKSB7CiAgICAgICAgICAgICAgICAgICAgdGhpcy5xdWVzdGlvbm5haXJlLm15bGVzc29ucy5wdXNoKHQpCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pCgogICAgICAgICAgICAvL+iOt+WPlumXruWNt+S/oeaBrwogICAgICAgICAgICB0aGlzLiRodHRwLmdldCgiL3F1ZXN0aW9ubmFpcmUvIit0aGlzLiRyb3V0ZS5wYXJhbXMucWlkLCB7CiAgICAgICAgICAgIH0pLnRoZW4oKHJlcykgPT4gewogICAgICAgICAgICAgICAgbGV0IGRhdGEgPSByZXMuZGF0YS5kYXRhCiAgICAgICAgICAgICAgICB0aGlzLnF1ZXN0aW9ubmFpcmVUeXBlID0gZGF0YS50eXBlCiAgICAgICAgICAgICAgICB0aGlzLnF1ZXN0aW9ubmFpcmUucXVlc3Rpb25uYWlyZVRpdGxlID0gZGF0YS50aXRsZQogICAgICAgICAgICAgICAgaWYgKGRhdGEuc3RhcnRfdGltZSAhPT0gIiIpewogICAgICAgICAgICAgICAgICAgIHRoaXMucXVlc3Rpb25uYWlyZS50aW1lWzBdID0gbmV3IERhdGUoZGF0YS5zdGFydF90aW1lKQogICAgICAgICAgICAgICAgICAgIHRoaXMucXVlc3Rpb25uYWlyZS50aW1lWzFdID0gbmV3IERhdGUoZGF0YS5lbmRfdGltZSkKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBjb25zdCB0ZW1wTGlzdCA9IGRhdGEucXVlc3Rpb25zOwogICAgICAgICAgICAgICAgY29uc3QgcmVzTGlzdCA9IFtdOwogICAgICAgICAgICAgICAgZm9yIChjb25zdCB0IG9mIHRlbXBMaXN0KSB7CiAgICAgICAgICAgICAgICAgICAgY29uc3Qgb25lUXVlc3Rpb24gPSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHF1ZXN0aW9uSW5kZXg6dC5pbmRleCwKICAgICAgICAgICAgICAgICAgICAgICAgaXNCb3hTZWxlY3RlZDpmYWxzZSwKICAgICAgICAgICAgICAgICAgICAgICAgcXVlc3Rpb25UaXRsZTp0LmRlc2MsCiAgICAgICAgICAgICAgICAgICAgICAgIHF1ZXN0aW9uTnVsbGFibGU6dC5udWxsYWJsZSwKICAgICAgICAgICAgICAgICAgICAgICAgcXVlc3Rpb25UeXBlOnQudHlwZSwKICAgICAgICAgICAgICAgICAgICAgICAgY291cnNlR29hbDogdC50YXJnZXRfaWQsCiAgICAgICAgICAgICAgICAgICAgICAgIHF1ZXN0aW9uT3B0aW9uczp0Lml0ZW1zCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIHJlc0xpc3QucHVzaChvbmVRdWVzdGlvbikKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIHRoaXMucXVlc3Rpb25MaXN0ID0gcmVzTGlzdDsKICAgICAgICAgICAgICAgIGlmIChudWxsICE9PSBkYXRhLmxlc3Nvbl9pbmZvKXsKICAgICAgICAgICAgICAgICAgICB0aGlzLnF1ZXN0aW9ubmFpcmUubGVzc29uTm8gPSBkYXRhLmxlc3Nvbl9pbmZvLmxlc3Nvbl9jb2RlCiAgICAgICAgICAgICAgICAgICAgdGhpcy5mZXRjaENvdXJzZUdvYWwoZGF0YS5sZXNzb25faW5mby5jb3Vyc2VfY29kZSkKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIHRoaXMuJG1lc3NhZ2Uoe21lc3NhZ2U6ICLpl67ljbflt7Lor7vlj5YiLCBkdXJhdGlvbjogMTAwMH0pOwogICAgICAgICAgICAgICAgLy8gdGhpcy5yZWxvYWQoKTsKICAgICAgICAgICAgICAgIGlmICh0aGlzLnF1ZXN0aW9ubmFpcmVUeXBlID09PSAxICYmIHRoaXMucXVlc3Rpb25uYWlyZS5sZXNzb25ObyA9PT0gIiIpewogICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCd5ZXMnKQogICAgICAgICAgICAgICAgICAgIHRoaXMuaGFja1Jlc2V0ID0gZmFsc2UKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSkKCiAgICAgICAgfSwKCgogICAgICAgIHNlbGVjdE9uZUJveChpbmRleCkgewogICAgICAgICAgICB0aGlzLnF1ZXN0aW9uTGlzdFtpbmRleF0uaXNCb3hTZWxlY3RlZCA9ICF0aGlzLnF1ZXN0aW9uTGlzdFtpbmRleF0uaXNCb3hTZWxlY3RlZDsKICAgICAgICB9LAoKICAgICAgICByZXNldFF1ZXN0aW9uKGluZGV4KSB7CiAgICAgICAgICAgIHJldHVybjsgIC8vIHByb2Nlc3MgaW4gdGhlIHF1ZXN0aW9uLnZ1ZQogICAgICAgIH0sCgogICAgICAgIHNhdmVPbmVRdWVzdGlvbihkYXRhKSB7CiAgICAgICAgICAgIGNvbnN0IGluZGV4ID0gZGF0YVsncXVlc3Rpb25JbmRleCddOwogICAgICAgICAgICBjb25zdCBvbmVRdWVzdGlvbiA9IHsKICAgICAgICAgICAgICAgIHF1ZXN0aW9uSW5kZXg6IGluZGV4LAogICAgICAgICAgICAgICAgaXNCb3hTZWxlY3RlZDogdHJ1ZSwKICAgICAgICAgICAgICAgIHF1ZXN0aW9uVGl0bGU6IGRhdGFbJ3F1ZXN0aW9uVGl0bGUnXSwKICAgICAgICAgICAgICAgIHF1ZXN0aW9uTnVsbGFibGU6IGRhdGFbJ3F1ZXN0aW9uTnVsbGFibGUnXSwKICAgICAgICAgICAgICAgIHF1ZXN0aW9uVHlwZTogZGF0YVsncXVlc3Rpb25UeXBlJ10sCiAgICAgICAgICAgICAgICBxdWVzdGlvbk9wdGlvbnM6IGRhdGFbJ3F1ZXN0aW9uT3B0aW9ucyddLAogICAgICAgICAgICAgICAgY291cnNlR29hbDogZGF0YVsnY291cnNlR29hbCddCiAgICAgICAgICAgIH07CiAgICAgICAgICAgIHRoaXMucXVlc3Rpb25MaXN0LnNwbGljZShpbmRleCwgMSwgb25lUXVlc3Rpb24pOwogICAgICAgIH0sCgogICAgICAgIGRlbGV0ZU9uZUJveChpbmRleCkgewogICAgICAgICAgICBjb25zb2xlLmxvZyh0aGlzLnF1ZXN0aW9uTGlzdC5zcGxpY2UoaW5kZXgsIDEpKQogICAgICAgICAgICBmb3IgKGxldCBpID0gaW5kZXg7IGkgPCB0aGlzLnF1ZXN0aW9uTGlzdC5sZW5ndGg7IGkrKykgewogICAgICAgICAgICAgICAgdGhpcy5xdWVzdGlvbkxpc3RbaV0ucXVlc3Rpb25JbmRleC0tOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHRoaXMucmVsb2FkKCkKICAgICAgICB9LAogICAgICAgIGFkZE5ld1F1ZXN0aW9uKHR5cGUpIHsKICAgICAgICAgICAgY29uc3QgbmV3UXVlc3Rpb24gPSB7CiAgICAgICAgICAgICAgICBxdWVzdGlvbkluZGV4OiB0aGlzLnF1ZXN0aW9uTGlzdC5sZW5ndGgsCiAgICAgICAgICAgICAgICBpc0JveFNlbGVjdGVkOiB0cnVlLAogICAgICAgICAgICAgICAgcXVlc3Rpb25UaXRsZTogIiIsCiAgICAgICAgICAgICAgICBxdWVzdGlvbk51bGxhYmxlOiBmYWxzZSwKICAgICAgICAgICAgICAgIHF1ZXN0aW9uVHlwZTogdHlwZSwKICAgICAgICAgICAgICAgIHF1ZXN0aW9uT3B0aW9uczogWwogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgIm15b3B0aW9uIjogJ+iDvScsCiAgICAgICAgICAgICAgICAgICAgICAgICJzY29yZSI6IDEwMAogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAibXlvcHRpb24iOiAn5aSn6YOo5YiG6IO9JywKICAgICAgICAgICAgICAgICAgICAgICAgInNjb3JlIjogODAKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgIm15b3B0aW9uIjogJ+mDqOWIhuiDvScsCiAgICAgICAgICAgICAgICAgICAgICAgICJzY29yZSI6IDYwCiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICJteW9wdGlvbiI6ICflpKfpg6jliIbkuI3og70nLAogICAgICAgICAgICAgICAgICAgICAgICAic2NvcmUiOiA0MAogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICBjb3Vyc2VHb2FsOiBudWxsLAogICAgICAgICAgICB9OwogICAgICAgICAgICB0aGlzLnF1ZXN0aW9uTGlzdC5wdXNoKG5ld1F1ZXN0aW9uKTsKICAgICAgICB9LAogICAgICAgIHNhdmVRdWVzdGlvbm5haXJlVGl0bGUoKSB7CiAgICAgICAgICAgIHRoaXMucXVlc3Rpb25uYWlyZS5pc0JveFNlbGVjdGVkID0gZmFsc2U7CiAgICAgICAgfSwKICAgICAgICByZXNldFF1ZXN0aW9ubmFpcmVUaXRsZSgpIHsKICAgICAgICAgICAgdGhpcy5xdWVzdGlvbm5haXJlLmlzQm94U2VsZWN0ZWQgPSB7CiAgICAgICAgICAgICAgICBpc0JveFNlbGVjdGVkOiBmYWxzZSwKICAgICAgICAgICAgICAgIHF1ZXN0aW9ubmFpcmVUaXRsZTogIuivt+i+k+WFpeagh+mimCIsCiAgICAgICAgICAgICAgICBxdWVzdGlvbm5haXJlSWQ6IHRoaXMuJHJvdXRlLnBhcmFtcy5xaWQsCiAgICAgICAgICAgIH07CiAgICAgICAgfSwKICAgICAgICBlZGl0VGl0bGUoKSB7CiAgICAgICAgICAgIHRoaXMucXVlc3Rpb25uYWlyZS5pc0JveFNlbGVjdGVkID0gdHJ1ZTsKICAgICAgICB9LAogICAgICAgIHNhdmVRdWVzdGlvbm5haXJlKCkgewogICAgICAgICAgICB0aGlzLiRodHRwLnBvc3QoIi9xdWVzdGlvbm5haXJlL2VkaXQiLCB7CiAgICAgICAgICAgICAgICBxdWVzdGlvbm5haXJlOgogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgcXVlc3Rpb25uYWlyZUlkOiBwYXJzZUludCh0aGlzLiRyb3V0ZS5wYXJhbXMucWlkKSwKICAgICAgICAgICAgICAgICAgICAgICAgcXVlc3Rpb25uYWlyZVRpdGxlOiB0aGlzLnF1ZXN0aW9ubmFpcmUucXVlc3Rpb25uYWlyZVRpdGxlLAogICAgICAgICAgICAgICAgICAgICAgICBsZXNzb25ObzogdGhpcy5xdWVzdGlvbm5haXJlLmxlc3Nvbk5vLAogICAgICAgICAgICAgICAgICAgICAgICBzdGFydFRpbWU6IHRoaXMucXVlc3Rpb25uYWlyZS50aW1lWzBdLmdldFRpbWUoKSwKICAgICAgICAgICAgICAgICAgICAgICAgZW5kVGltZTogdGhpcy5xdWVzdGlvbm5haXJlLnRpbWVbMV0uZ2V0VGltZSgpCiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIHF1ZXN0aW9uTGlzdDogdGhpcy5xdWVzdGlvbkxpc3QsCiAgICAgICAgICAgIH0pLnRoZW4oKHJlcykgPT4gewogICAgICAgICAgICAgICAgbGV0IGRhdGEgPSByZXMuZGF0YTsKICAgICAgICAgICAgICAgIGlmIChkYXRhLmNvZGUgPT09IDApIHsKICAgICAgICAgICAgICAgICAgICB0aGlzLiRtZXNzYWdlKHttZXNzYWdlOiAi6Zeu5Y235bey5L+d5a2YIiwgZHVyYXRpb246IDEwMDB9KTsKICAgICAgICAgICAgICAgICAgICB0aGlzLiRyb3V0ZXIucHVzaCgnL21hbmFnZS9xdWVzdGlvbm5haXJlJyk7CiAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgIHRoaXMuJG1lc3NhZ2Uoe21lc3NhZ2U6ICJlcnJvcu+8gemXruWNt+acquS/neWtmO+8gSIsIGR1cmF0aW9uOiAxMDAwfSk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pLmNhdGNoKCgpID0+IHsKICAgICAgICAgICAgICAgIHRoaXMuJG1lc3NhZ2Uoe21lc3NhZ2U6ICJlcnJvcu+8gemXruWNt+acquS/neWtmO+8gSIsIGR1cmF0aW9uOiAxMDAwfSk7CiAgICAgICAgICAgIH0pOwoKICAgICAgICB9LAogICAgICAgIGRlbGV0ZVF1ZXN0aW9ubmFpcmUoKSB7CiAgICAgICAgICAgIHRoaXMuZGVsZXRlVmlzaWJsZSA9IGZhbHNlOwogICAgICAgICAgICB0aGlzLiRodHRwLnBvc3QoJy9xdWVzdGlvbm5haXJlL2RlbGV0ZScsIHsiaWQiOiBbdGhpcy4kcm91dGUucGFyYW1zLnFpZF19KQogICAgICAgICAgICAgICAgLnRoZW4ocmVzcG9uc2UgPT4gewogICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlc3BvbnNlLmRhdGEpOwogICAgICAgICAgICAgICAgICAgIGlmIChyZXNwb25zZS5kYXRhLmNvZGUgPT0gMCkgewogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLiRtZXNzYWdlKHttZXNzYWdlOiAi5Yig6Zmk5oiQ5YqfIiwgZHVyYXRpb246IDEwMDB9KTsKICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy4kcm91dGVyLmJhY2soKQogICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAocmVzcG9uc2UuZGF0YS5jb2RlID09IDIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy4kbWVzc2FnZSh7bWVzc2FnZTogIuWIoOmZpOWksei0pSIsIGR1cmF0aW9uOiAxMDAwfSk7CiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuZGVsZXRlVmlzaWJsZSA9IHRydWUKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICB9LAogICAgICAgIHJlbGVhc2VRdWVzdGlvbm5haXJlKCkgewogICAgICAgICAgICB0aGlzLiRodHRwLnBvc3QoIi9xdWVzdGlvbm5haXJlL2VkaXQiLCB7CiAgICAgICAgICAgICAgICBxdWVzdGlvbm5haXJlOgogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgcXVlc3Rpb25uYWlyZUlkOiBwYXJzZUludCh0aGlzLiRyb3V0ZS5wYXJhbXMucWlkKSwKICAgICAgICAgICAgICAgICAgICAgICAgcXVlc3Rpb25uYWlyZVRpdGxlOiB0aGlzLnF1ZXN0aW9ubmFpcmUucXVlc3Rpb25uYWlyZVRpdGxlLAogICAgICAgICAgICAgICAgICAgICAgICBsZXNzb25ObzogdGhpcy5xdWVzdGlvbm5haXJlLmxlc3Nvbk5vLAogICAgICAgICAgICAgICAgICAgICAgICBzdGFydFRpbWU6IHRoaXMucXVlc3Rpb25uYWlyZS50aW1lWzBdLmdldFRpbWUoKSwKICAgICAgICAgICAgICAgICAgICAgICAgZW5kVGltZTogdGhpcy5xdWVzdGlvbm5haXJlLnRpbWVbMV0uZ2V0VGltZSgpCiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIHF1ZXN0aW9uTGlzdDogdGhpcy5xdWVzdGlvbkxpc3QsCiAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICAudGhlbigoKSA9PiB7CiAgICAgICAgICAgICAgICAgICAgdGhpcy4kaHR0cC5wb3N0KCcvcXVlc3Rpb25uYWlyZS9zdGF0dXMnLCB7ImlkIjogdGhpcy4kcm91dGUucGFyYW1zLnFpZCwgInN0YXR1cyI6MX0pCiAgICAgICAgICAgICAgICAgICAgICAgIC50aGVuKChyZXMpPT57CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAocmVzLmRhdGEuY29kZT09PTApewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuJG1lc3NhZ2Uoe21lc3NhZ2U6ICLpl67ljbflt7Llj5HluIMiLCBkdXJhdGlvbjogMTAwMH0pCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9ZWxzZXsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLiRtZXNzYWdlKHttZXNzYWdlOiAiZXJyb3IhIOmXruWNt+acquWPkeW4gyIsIGR1cmF0aW9uOiAxMDAwfSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgICAgIH0pLmNhdGNoKCgpPT57CiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuJG1lc3NhZ2Uoe21lc3NhZ2U6ICJlcnJvcu+8gemXruWNt+acquWPkeW4g++8gSIsIGR1cmF0aW9uOiAxMDAwfSk7CiAgICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgICAgICB0aGlzLnJlbGVhc2VFbmQoKQogICAgICAgICAgICAgICAgfSkuY2F0Y2goKCkgPT4gewogICAgICAgICAgICAgICAgdGhpcy4kbWVzc2FnZSh7bWVzc2FnZTogImVycm9y77yB6Zeu5Y235pyq5Y+R5biD77yBIiwgZHVyYXRpb246IDEwMDB9KTsKICAgICAgICAgICAgfSk7CgoKICAgICAgICAgICAgdGhpcy5yZWxlYXNlVmlzaWJsZSA9IHRydWU7CgogICAgICAgIH0sCiAgICAgICAgcmVsZWFzZUVuZCgpIHsKICAgICAgICAgICAgdGhpcy5yZWxlYXNlVmlzaWJsZSA9IGZhbHNlOwogICAgICAgICAgICB0aGlzLiRyb3V0ZXIucHVzaCgnL3F1ZXN0aW9ubmFpcmUvZG9uZScpOwogICAgICAgIH0sCiAgICAgICAgcmVsb2FkKCkgewogICAgICAgICAgICB0aGlzLmhhY2tSZXNldCA9IGZhbHNlCiAgICAgICAgICAgIHRoaXMuJG5leHRUaWNrKCgpID0+IHsKICAgICAgICAgICAgICAgIHRoaXMuaGFja1Jlc2V0ID0gdHJ1ZQogICAgICAgICAgICB9KQogICAgICAgIH0sCiAgICAgICAgY29weSgpIHsKICAgICAgICAgICAgY29uc3QgY2xpcGJvYXJkID0gbmV3IENsaXBib2FyZCgnLmNvcHktbGluaycpCiAgICAgICAgICAgIGNsaXBib2FyZC5vbignc3VjY2VzcycsIGUgPT4gewogICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ+WkjeWItuaIkOWKnycpCiAgICAgICAgICAgICAgICB0aGlzLiRtZXNzYWdlKHttZXNzYWdlOiAi5aSN5Yi25oiQ5YqfIiwgZHVyYXRpb246IDEwMDB9KQogICAgICAgICAgICAgICAgLy8g6YeK5pS+5YaF5a2YCiAgICAgICAgICAgICAgICBjbGlwYm9hcmQuZGVzdHJveSgpCiAgICAgICAgICAgIH0pCiAgICAgICAgICAgIGNsaXBib2FyZC5vbignZXJyb3InLCBlID0+IHsKICAgICAgICAgICAgICAgIC8vIOS4jeaUr+aMgeWkjeWItgogICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ+ivpea1j+iniOWZqOS4jeaUr+aMgeiHquWKqOWkjeWIticpCiAgICAgICAgICAgICAgICAvLyDph4rmlL7lhoXlrZgKICAgICAgICAgICAgICAgIGNsaXBib2FyZC5kZXN0cm95KCkKICAgICAgICAgICAgfSkKICAgICAgICB9LAogICAgICAgIGZldGNobXlsZXNzb24odmFsdWUpIHsKICAgICAgICAgICAgdGhpcy5oYWNrUmVzZXQgPSB0cnVlCiAgICAgICAgICAgIGxldCBjb3Vyc2VObyA9ICcnCiAgICAgICAgICAgIGZvciAoY29uc3QgdCBvZiB0aGlzLnF1ZXN0aW9ubmFpcmUubXlsZXNzb25zKSB7CiAgICAgICAgICAgICAgICBpZiAodC5sZXNzb25fY29kZSA9PT0gdmFsdWUpIHsKICAgICAgICAgICAgICAgICAgICBjb3Vyc2VObyA9IHQuY291cnNlX2NvZGUKICAgICAgICAgICAgICAgICAgICBpZiAoY291cnNlTm8gPT09IHRoaXMuY291cnNlTm8pewogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4KICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgdGhpcy5jb3Vyc2VObyA9IGNvdXJzZU5vCiAgICAgICAgICAgICAgICAgICAgdGhpcy4kaHR0cC5nZXQoImNvdXJzZS90YXJnZXQvIiArIGNvdXJzZU5vLCB7fSkudGhlbigocmVzKSA9PiB7CiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHRhcmdldExpc3QgPSByZXMuZGF0YS5kYXRhLlRhcmdldHMKICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgcmVzTGlzdCA9IFtdOwogICAgICAgICAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IHQgb2YgdGFyZ2V0TGlzdCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzTGlzdC5wdXNoKHQpCiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5jb3Vyc2VHb2FscyA9IHJlc0xpc3QKICAgICAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgICAgIHRoaXMucmVsb2FkKCkKICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgZmV0Y2hDb3Vyc2VHb2FsKGNvdXJzZU5vKXsKICAgICAgICAgICAgICAgICAgICB0aGlzLiRodHRwLmdldCgiY291cnNlL3RhcmdldC8iICsgY291cnNlTm8sIHt9KS50aGVuKChyZXMpID0+IHsKICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgdGFyZ2V0TGlzdCA9IHJlcy5kYXRhLmRhdGEuVGFyZ2V0cwogICAgICAgICAgICAgICAgICAgICAgICBjb25zdCByZXNMaXN0ID0gW107CiAgICAgICAgICAgICAgICAgICAgICAgIGZvciAoY29uc3QgdCBvZiB0YXJnZXRMaXN0KSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXNMaXN0LnB1c2godCkKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmNvdXJzZUdvYWxzID0gcmVzTGlzdAogICAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2codGhpcy5jb3Vyc2VHb2FscykKICAgICAgICAgICAgICAgICAgICB0aGlzLnJlbG9hZCgpCgogICAgICAgIH0KICAgIH0sCgogICAgY3JlYXRlZCgpIHsKICAgICAgICAvLyBpZiAobnVsbCAhPSB0aGlzLiRyb3V0ZS5wYXJhbXMudGl0bGUpewogICAgICAgIC8vICAgICB0aGlzLnF1ZXN0aW9ubmFpcmUucXVlc3Rpb25uYWlyZVRpdGxlID0gdGhpcy4kcm91dGUucGFyYW1zLnRpdGxlCiAgICAgICAgLy8gfQogICAgICAgIGlmIChudWxsICE9IHRoaXMuJHJvdXRlLnBhcmFtcy50eXBlKXsKICAgICAgICAgICAgdGhpcy5xdWVzdGlvbm5haXJlVHlwZSA9IHRoaXMuJHJvdXRlLnBhcmFtcy50eXBlCiAgICAgICAgfQogICAgICAgIHRoaXMuJGVtaXQoJ3NldEFjdGl2ZUJyZWFkSXRlbScsICdicmVhZF9lZGl0X3BhZ2UnKTsKCgogICAgICAgIC8vIGlmIChudWxsICE9IHRoaXMuJHJvdXRlLnBhcmFtcy5xdWVzdGlvbkxpc3QpewogICAgICAgIC8vICAgICB0aGlzLmZldGNoQ291cnNlR29hbCh0aGlzLiRyb3V0ZS5wYXJhbXMuY291cnNlTm8pCiAgICAgICAgLy8gICAgIHRoaXMucXVlc3Rpb25MaXN0ID0gdGhpcy4kcm91dGUucGFyYW1zLnF1ZXN0aW9uTGlzdAogICAgICAgIC8vICAgICB0aGlzLiRodHRwLmdldCgiL2NvdXJzZS9teWxlc3NvbiIsIHt9KS50aGVuKChyZXMpID0+IHsKICAgICAgICAvLyAgICAgICAgIGNvbnN0IGxlc3NvbnMgPSByZXMuZGF0YS5kYXRhLmxlc3NvbnMKICAgICAgICAvLyAgICAgICAgIGZvciAoY29uc3QgdCBvZiBsZXNzb25zKSB7CiAgICAgICAgLy8gICAgICAgICAgICAgdGhpcy5xdWVzdGlvbm5haXJlLm15bGVzc29ucy5wdXNoKHQpCiAgICAgICAgLy8gICAgICAgICB9CiAgICAgICAgLy8gICAgIH0pCiAgICAgICAgLy8gICAgIHJldHVybgogICAgICAgIC8vIH0KICAgICAgICAvLyBjb25zb2xlLmxvZyh0aGlzLiRyb3V0ZS5wYXJhbXMucWlkKQogICAgICAgIGlmIChudWxsICE9IHRoaXMuJHJvdXRlLnBhcmFtcy5xaWQgKXsKICAgICAgICAgIHRoaXMuZmV0Y2hEYXRhKCk7CiAgICAgICAgfQogICAgfQp9Cg=="},{"version":3,"sources":["MainQuestionList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4IA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"MainQuestionList.vue","sourceRoot":"src/components/questionnaire","sourcesContent":["<template>\n    <div>\n        <div class=\"main-question-list\">\n            <div style=\"padding: 0; display: inline\">\n                <el-card style=\"position: relative; text-align: center\">\n                    <div class=\"box-is-not-selected-wrapper\" @click=\"editTitle\">\n                        <div v-if=\"questionnaire.isBoxSelected===false\" class=\"box-is-not-selected\">\n                            <h1>{{questionnaire.questionnaireTitle}}</h1>\n                            <div v-if=\"questionnaireType===1\">\n                                <h3>{{questionnaire.lessonNo}}</h3>\n                            </div>\n                            <h3>开始时间：{{questionnaire.time[0].toLocaleDateString()+' '+questionnaire.time[0].toLocaleTimeString()}}</h3>\n                            <h3>结束时间：{{questionnaire.time[1].toLocaleDateString()+' '+questionnaire.time[1].toLocaleTimeString()}}</h3>\n                        </div>\n\n                        <div class=\"edit-icon\"><i class=\"el-icon-edit-outline\"></i></div>\n                    </div>\n                    <div v-if=\"questionnaire.isBoxSelected===true\">\n                        <el-form>\n                            <el-form-item>\n                                标题：\n                                <el-input\n                                        type=\"text\" style=\"max-width: 20%\"\n                                        placeholder=\"请输入问卷标题\"\n                                        v-model=\"questionnaire.questionnaireTitle\"\n                                ></el-input>\n                            </el-form-item>\n                            <el-form-item v-if=\"questionnaireType===1\">\n                                课号：\n                                <el-select @change=\"fetchmylesson\" v-model=\"questionnaire.lessonNo\" placeholder=\"请选择\" style=\"width: 20%\">\n                                    <el-option\n                                            v-for=\"(item,index) in this.questionnaire.mylessons\"\n                                            :key=\"index\"\n                                            :label=\"item.lesson_code + '-' + item.course_name\"\n                                            :value=\"item.lesson_code\"\n                                    >\n                                    </el-option>\n                                </el-select>\n                            </el-form-item>\n                            <el-form-item>\n                                时间：\n                                <el-date-picker\n                                        v-model=\"questionnaire.time\"\n                                        type=\"datetimerange\"\n                                        range-separator=\"至\"\n                                        start-placeholder=\"开始日期\"\n                                        end-placeholder=\"结束日期\">\n                                </el-date-picker>\n                            </el-form-item>\n\n\n                            <el-form-item>\n                                <el-button type=\"primary\" @click=\"saveQuestionnaireTitle\">保存</el-button>\n                                <el-button @click=\"resetQuestionnaireTitle\">重置</el-button>\n                            </el-form-item>\n                        </el-form>\n                    </div>\n                </el-card>\n            </div>\n            <div style=\"height: 10px\"></div>\n\n\n            <Question v-if=\"hackReset\" v-for=\"(item,index) in questionList\"\n                      :key=\"index\"\n                      :is-box-selected=\"item.isBoxSelected\"\n                      :question-index=\"index\"\n                      :question-title=\"item.questionTitle\"\n                      :question-nullable=\"item.questionNullable\"\n                      :question-type=\"item.questionType\"\n                      :question-options=\"item.questionOptions\"\n                      :course-goals=\"courseGoals\"\n                      :course-goal=\"item.courseGoal\"\n                      :questionnaire-type=\"questionnaireType\"\n                      @clickUnSelected=\"selectOneBox(index)\"\n                      @clickSelected=\"selectOneBox(index)\"\n                      @saveOneQuestion=\"saveOneQuestion\"\n                      @resetQuestion=\"resetQuestion(index)\"\n                      @clickDelete=\"deleteOneBox(index)\"\n            ></Question>\n            <div v-if=\"hackReset===false\">\n                <el-alert\n                        title=\"错误提示\"\n                        type=\"error\"\n                        center\n                        description=\"请务必先选择您的课号！\"\n                >\n\n                </el-alert>\n            </div>\n            <el-card class=\"add-question\" :body-style=\"{ padding: '10px' }\" shadow=\"hover\">\n                <div class=\"add-question-inner\" @click=\"addNewQuestion(0)\"><i class=\"el-icon-plus\"></i>\n                    添加问题\n                </div>\n            </el-card>\n            <el-card style=\"text-align: center\">\n\n                <el-dialog\n                        title=\"确认删除？\"\n                        :visible.sync=\"deleteVisible\"\n                        append-to-body\n                        center\n                >\n                <span slot=\"footer\" class=\"dialog-footer\">\n                    <el-button @click=\"deleteVisible=false\" size=\"small\">取 消</el-button>\n                    <el-button @click=\"deleteQuestionnaire\" type=\"danger\" size=\"small\">确认删除</el-button>\n                </span>\n\n                </el-dialog>\n                <el-dialog\n                        title=\"发布成功\"\n                        :visible.sync=\"releaseVisible\"\n                        append-to-body\n                        center\n                >\n                    问卷链接为：\n                    <el-link class=\"copy-link\"\n                             target=\"_blank\" @click=\"copy\"\n                             :data-clipboard-text=\"'/fillin/'+this.$route.params.qid\"\n                             data-clipboard-action=\"copy\"\n                             type=\"primary\"\n                    >\n                        {{this.questionnaire.questionnaireTitle}}-点击复制\n                    </el-link>\n                    <span slot=\"footer\" class=\"dialog-footer\">\n                    <el-button @click=\"releaseEnd\" type=\"primary\">关 闭</el-button>\n                </span>\n\n                </el-dialog>\n\n                <el-button type=\"danger\" @click=\"deleteVisible = true\">删 除</el-button>\n                <el-button @click=\"saveQuestionnaire\">保 存</el-button>\n                <el-button @click=\"releaseQuestionnaire\" type=\"primary\">发 布</el-button>\n            </el-card>\n\n\n        </div>\n    </div>\n</template>\n\n<script>\n    import Question from \"./Question\";\n    import Clipboard from 'clipboard';\n\n    export default {\n        name: \"MainQuestionList\",\n        components: {Question},\n\n        data: function () {\n            return {\n                questionList: [],\n                questionnaire: {\n                    isBoxSelected: false,\n                    lessonNo: \"\",\n                    questionnaireTitle: \"请输入标题\",\n                    time:[new Date(),new Date()],\n                    mylessons:[]\n                },\n                deleteVisible: false,\n                deleted: false,\n                releaseVisible: false,\n                hackReset:true,\n                questionnaireType: 0,\n                courseGoals: [],\n                courseNo:''\n            }\n        },\n\n        methods: {\n            fetchData() {\n                this.$http.get(\"/course/mylesson\", {}).then((res) => {\n                    const lessons = res.data.data.lessons\n                    for (const t of lessons) {\n                        this.questionnaire.mylessons.push(t)\n                    }\n                })\n\n                //获取问卷信息\n                this.$http.get(\"/questionnaire/\"+this.$route.params.qid, {\n                }).then((res) => {\n                    let data = res.data.data\n                    this.questionnaireType = data.type\n                    this.questionnaire.questionnaireTitle = data.title\n                    if (data.start_time !== \"\"){\n                        this.questionnaire.time[0] = new Date(data.start_time)\n                        this.questionnaire.time[1] = new Date(data.end_time)\n                    }\n\n                    const tempList = data.questions;\n                    const resList = [];\n                    for (const t of tempList) {\n                        const oneQuestion = {\n                            questionIndex:t.index,\n                            isBoxSelected:false,\n                            questionTitle:t.desc,\n                            questionNullable:t.nullable,\n                            questionType:t.type,\n                            courseGoal: t.target_id,\n                            questionOptions:t.items\n                        }\n                        resList.push(oneQuestion)\n                    }\n                    this.questionList = resList;\n                    if (null !== data.lesson_info){\n                        this.questionnaire.lessonNo = data.lesson_info.lesson_code\n                        this.fetchCourseGoal(data.lesson_info.course_code)\n                    }\n                    this.$message({message: \"问卷已读取\", duration: 1000});\n                    // this.reload();\n                    if (this.questionnaireType === 1 && this.questionnaire.lessonNo === \"\"){\n                        console.log('yes')\n                        this.hackReset = false\n                    }\n                })\n\n            },\n\n\n            selectOneBox(index) {\n                this.questionList[index].isBoxSelected = !this.questionList[index].isBoxSelected;\n            },\n\n            resetQuestion(index) {\n                return;  // process in the question.vue\n            },\n\n            saveOneQuestion(data) {\n                const index = data['questionIndex'];\n                const oneQuestion = {\n                    questionIndex: index,\n                    isBoxSelected: true,\n                    questionTitle: data['questionTitle'],\n                    questionNullable: data['questionNullable'],\n                    questionType: data['questionType'],\n                    questionOptions: data['questionOptions'],\n                    courseGoal: data['courseGoal']\n                };\n                this.questionList.splice(index, 1, oneQuestion);\n            },\n\n            deleteOneBox(index) {\n                console.log(this.questionList.splice(index, 1))\n                for (let i = index; i < this.questionList.length; i++) {\n                    this.questionList[i].questionIndex--;\n                }\n                this.reload()\n            },\n            addNewQuestion(type) {\n                const newQuestion = {\n                    questionIndex: this.questionList.length,\n                    isBoxSelected: true,\n                    questionTitle: \"\",\n                    questionNullable: false,\n                    questionType: type,\n                    questionOptions: [\n                        {\n                            \"myoption\": '能',\n                            \"score\": 100\n                        },\n                        {\n                            \"myoption\": '大部分能',\n                            \"score\": 80\n                        },\n                        {\n                            \"myoption\": '部分能',\n                            \"score\": 60\n                        },\n                        {\n                            \"myoption\": '大部分不能',\n                            \"score\": 40\n                        }\n                    ],\n                    courseGoal: null,\n                };\n                this.questionList.push(newQuestion);\n            },\n            saveQuestionnaireTitle() {\n                this.questionnaire.isBoxSelected = false;\n            },\n            resetQuestionnaireTitle() {\n                this.questionnaire.isBoxSelected = {\n                    isBoxSelected: false,\n                    questionnaireTitle: \"请输入标题\",\n                    questionnaireId: this.$route.params.qid,\n                };\n            },\n            editTitle() {\n                this.questionnaire.isBoxSelected = true;\n            },\n            saveQuestionnaire() {\n                this.$http.post(\"/questionnaire/edit\", {\n                    questionnaire:\n                        {\n                            questionnaireId: parseInt(this.$route.params.qid),\n                            questionnaireTitle: this.questionnaire.questionnaireTitle,\n                            lessonNo: this.questionnaire.lessonNo,\n                            startTime: this.questionnaire.time[0].getTime(),\n                            endTime: this.questionnaire.time[1].getTime()\n                        },\n                    questionList: this.questionList,\n                }).then((res) => {\n                    let data = res.data;\n                    if (data.code === 0) {\n                        this.$message({message: \"问卷已保存\", duration: 1000});\n                        this.$router.push('/manage/questionnaire');\n                    } else {\n                        this.$message({message: \"error！问卷未保存！\", duration: 1000});\n                    }\n                }).catch(() => {\n                    this.$message({message: \"error！问卷未保存！\", duration: 1000});\n                });\n\n            },\n            deleteQuestionnaire() {\n                this.deleteVisible = false;\n                this.$http.post('/questionnaire/delete', {\"id\": [this.$route.params.qid]})\n                    .then(response => {\n                        console.log(response.data);\n                        if (response.data.code == 0) {\n                            this.$message({message: \"删除成功\", duration: 1000});\n                            this.$router.back()\n                        } else if (response.data.code == 2) {\n                            this.$message({message: \"删除失败\", duration: 1000});\n                            this.deleteVisible = true\n                        }\n                    });\n            },\n            releaseQuestionnaire() {\n                this.$http.post(\"/questionnaire/edit\", {\n                    questionnaire:\n                        {\n                            questionnaireId: parseInt(this.$route.params.qid),\n                            questionnaireTitle: this.questionnaire.questionnaireTitle,\n                            lessonNo: this.questionnaire.lessonNo,\n                            startTime: this.questionnaire.time[0].getTime(),\n                            endTime: this.questionnaire.time[1].getTime()\n                        },\n                    questionList: this.questionList,\n                })\n                    .then(() => {\n                        this.$http.post('/questionnaire/status', {\"id\": this.$route.params.qid, \"status\":1})\n                            .then((res)=>{\n                                if (res.data.code===0){\n                                    this.$message({message: \"问卷已发布\", duration: 1000})\n                                }else{\n                                    this.$message({message: \"error! 问卷未发布\", duration: 1000})\n                                }\n\n                            }).catch(()=>{\n                            this.$message({message: \"error！问卷未发布！\", duration: 1000});\n                        })\n                        this.releaseEnd()\n                    }).catch(() => {\n                    this.$message({message: \"error！问卷未发布！\", duration: 1000});\n                });\n\n\n                this.releaseVisible = true;\n\n            },\n            releaseEnd() {\n                this.releaseVisible = false;\n                this.$router.push('/questionnaire/done');\n            },\n            reload() {\n                this.hackReset = false\n                this.$nextTick(() => {\n                    this.hackReset = true\n                })\n            },\n            copy() {\n                const clipboard = new Clipboard('.copy-link')\n                clipboard.on('success', e => {\n                    console.log('复制成功')\n                    this.$message({message: \"复制成功\", duration: 1000})\n                    // 释放内存\n                    clipboard.destroy()\n                })\n                clipboard.on('error', e => {\n                    // 不支持复制\n                    console.log('该浏览器不支持自动复制')\n                    // 释放内存\n                    clipboard.destroy()\n                })\n            },\n            fetchmylesson(value) {\n                this.hackReset = true\n                let courseNo = ''\n                for (const t of this.questionnaire.mylessons) {\n                    if (t.lesson_code === value) {\n                        courseNo = t.course_code\n                        if (courseNo === this.courseNo){\n                            return\n                        }\n                        this.courseNo = courseNo\n                        this.$http.get(\"course/target/\" + courseNo, {}).then((res) => {\n                            const targetList = res.data.data.Targets\n                            const resList = [];\n                            for (const t of targetList) {\n                                resList.push(t)\n                            }\n                            this.courseGoals = resList\n                        })\n                        this.reload()\n                        break;\n                    }\n                }\n            },\n            fetchCourseGoal(courseNo){\n                        this.$http.get(\"course/target/\" + courseNo, {}).then((res) => {\n                            const targetList = res.data.data.Targets\n                            const resList = [];\n                            for (const t of targetList) {\n                                resList.push(t)\n                            }\n                            this.courseGoals = resList\n                        })\n                        console.log(this.courseGoals)\n                        this.reload()\n\n            }\n        },\n\n        created() {\n            // if (null != this.$route.params.title){\n            //     this.questionnaire.questionnaireTitle = this.$route.params.title\n            // }\n            if (null != this.$route.params.type){\n                this.questionnaireType = this.$route.params.type\n            }\n            this.$emit('setActiveBreadItem', 'bread_edit_page');\n\n\n            // if (null != this.$route.params.questionList){\n            //     this.fetchCourseGoal(this.$route.params.courseNo)\n            //     this.questionList = this.$route.params.questionList\n            //     this.$http.get(\"/course/mylesson\", {}).then((res) => {\n            //         const lessons = res.data.data.lessons\n            //         for (const t of lessons) {\n            //             this.questionnaire.mylessons.push(t)\n            //         }\n            //     })\n            //     return\n            // }\n            // console.log(this.$route.params.qid)\n            if (null != this.$route.params.qid ){\n              this.fetchData();\n            }\n        }\n    }\n</script>\n\n<style scoped>\n    .main-question-list {\n        height: 100%;\n        background-color: white;\n        box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\n    }\n\n    .add-question-inner {\n        width: 50%;\n        height: 50px;\n        padding-top: 25px;\n        text-align: center;\n        margin-left: auto;\n        margin-right: auto;\n        border-color: rgba(128, 128, 128, 0.5);\n        color: rgba(128, 128, 128, 0.5);\n        border-width: 2px;\n        border-style: dashed;\n        font-weight: bolder;\n        cursor: pointer;\n    }\n\n    .box-is-not-selected {\n        position: relative;\n    }\n\n    .box-is-not-selected-wrapper {\n        cursor: pointer;\n    }\n\n    .box-is-not-selected-wrapper:hover .box-is-not-selected {\n        filter: blur(8px);\n    }\n\n    .edit-icon {\n        display: none;\n    }\n\n    .box-is-not-selected-wrapper:hover .edit-icon {\n        display: inline;\n        height: 100%;\n        width: 100%;\n        background-color: rgba(179, 229, 252, 0.3);\n        position: absolute;\n        top: 0;\n        left: 0;\n    }\n\n    .el-icon-edit-outline {\n        position: absolute;\n        top: calc(50% - 30px);\n        left: calc(50% - 30px);\n        font-size: 60px;\n        color: rgba(128, 0, 128, 0.6);\n    }\n\n</style>\n"]}]}