{"remainingRequest":"F:\\github\\guetsurveystar\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\github\\guetsurveystar\\src\\components\\questionnaire\\FillIn.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\github\\guetsurveystar\\src\\components\\questionnaire\\FillIn.vue","mtime":1593181804395},{"path":"F:\\github\\guetsurveystar\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"F:\\github\\guetsurveystar\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\github\\guetsurveystar\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["FillIn.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"FillIn.vue","sourceRoot":"src/components/questionnaire","sourcesContent":["<template>\n  <div>\n    <el-row>\n      <el-col class=\"main-answer-list\" :sm=\"24\" :md=\"{span:18,offset:3}\" :lg=\"{span:16,offset:4}\"\n              :xl=\"{span:14,offset:5}\">\n        <el-card shadow=\"always\" class=\"box-card\">\n          <div v-if=\"questionnaire.isBoxSelected===false\">\n            <h1>标题：{{questionnaire.questionnaireTitle}}</h1>\n            <h3>课号：{{questionnaire.lessonNo}}</h3>\n          </div>\n        </el-card>\n        <el-form >\n          <div v-for=\"(item,index) in questionList\"\n               :key=\"index\">\n            <el-card class=\"box-card\">\n              <el-form-item>\n                <div class=\"question-title-div\">\n                  <div style=\"display: inline\"><b>{{index+1}}. {{item.questionTitle}}</b></div>\n                  <div style=\"display: inline\" v-if=\"item.questionNullable===false\" class=\"nullable-star\">\n                    *\n                  </div>\n                </div>\n\n              </el-form-item>\n\n              <el-form-item>\n                <el-radio-group :disabled=\"disabled\" class=\"singleoptiongroup\" v-if=\"item.questionType===0\"\n                                v-model=\"answerList[index].answerIndex\">\n                  <el-radio class=\"singleoption\" v-for=\"(optionItem,optionIndex) in item.questionOptions\" :key=\"optionIndex\"\n                            :label=\"optionIndex\" >{{optionItem.myoption}}\n                  </el-radio>\n                </el-radio-group>\n\n\n\n                <el-input :disabled=\"disabled\" v-else-if=\"item.questionType===1\"\n                          type=\"textarea\" style=\"max-width: 80%\"\n                          placeholder=\"请输入内容\"\n                          v-model=\"answerList[index].answerText\"\n                ></el-input>\n\n              </el-form-item>\n            </el-card>\n\n          </div>\n\n\n          <el-form-item>\n            <el-card class=\"box-card\" style=\"width: 95%\">\n\n              <el-dialog\n                width=\"70%\"\n                title=\"确认提交？\"\n                :visible.sync=\"submitVisible\"\n                append-to-body\n                center\n              >\n                            <span slot=\"footer\" class=\"dialog-footer\">\n                                <el-button @click=\"submitVisible = false\">取 消</el-button>\n                                <el-button @click=\"submitAnswer\" type=\"primary\">确认提交</el-button>\n                            </span>\n\n              </el-dialog>\n              <el-dialog\n                width=\"70%\"\n                title=\"确认保存？\"\n                :visible.sync=\"saveVisible\"\n                append-to-body\n                center\n              >\n                            <span slot=\"footer\" class=\"dialog-footer\">\n                                <el-button @click=\"saveVisible = false\">取 消</el-button>\n                                <el-button @click=\"saveAnswer\" type=\"primary\">确认保存</el-button>\n                            </span>\n\n              </el-dialog>\n              <el-dialog\n                width=\"70%\"\n                title=\"确认重置？\"\n                :visible.sync=\"resetVisible\"\n                append-to-body\n                center\n              >\n                            <span slot=\"footer\" class=\"dialog-footer\">\n                                <el-button @click=\"resetVisible = false\">取 消</el-button>\n                                <el-button @click=\"resetAnswer\" type=\"primary\">确认重置</el-button>\n                            </span>\n\n              </el-dialog>\n              <div v-if=\"buttonVisible\">\n                <el-button type=\"primary\" @click=\"submitVisible = true\">提 交</el-button>\n                <el-button @click=\"saveVisible = true\">保 存</el-button>\n                <el-button @click=\"resetVisible = true\">重 置</el-button>\n              </div>\n\n            </el-card>\n          </el-form-item>\n        </el-form>\n\n      </el-col>\n    </el-row>\n  </div>\n\n\n</template>\n\n<script>\n    export default {\n        name: \"FillIn\",\n        data: function () {\n            return {\n                questionList: [],\n                answerList: [],\n                questionnaire: {\n                    isBoxSelected: false,\n                    lessonNo: \"1911266\",\n                    questionnaireTitle: \"软件项目管理课程目标调查\",\n                    questionnaireId: this.$route.params.qid,\n                },\n                submitVisible: false,\n                resetVisible: false,\n                alreadySubmit: null,\n                saveVisible: false,\n                cannotSubmit: null,\n                buttonVisible: true,\n                disabled: false\n            }\n        },\n        computed: {\n            aaa: function () {\n                return {\n                    answerList: this.answerList,\n                }\n            }\n        },\n        methods: {\n            fetchData() {\n              /*单机*/\n                      // const tempList = this.questionList;\n                      // const ansList = [];\n                      // for (const t of tempList) {\n                      //     const oneAnswer = {\n                      //         questionId: t['questionId'],\n                      //         questionTitle: t['questionTitle'],\n                      //         questionType: t['questionType'],\n                      //         questionNullable: t['questionNullable'],\n                      //         answerSingleCheck: '',\n                      //         answerText: '',\n                      //         courseGoal: t['courseGoal']\n                      //     };\n                      //     ansList.push(oneAnswer);\n                      // }\n                      // this.answerList=ansList\n              /*单机*/\n\n                this.$http.get(\"/questionnaire/\"+this.$route.params.qid, {\n                }).then((res) => {\n\n                    if (res.data.code === 0){\n                      let data = res.data.data\n                      const tempList = data.questions\n                      const resList = [];\n                      const ansList = [];\n                      if (data.lock === true){\n                        this.disabled = true\n                        this.buttonVisible = false\n                      }\n                      this.questionnaire.lessonNo=data.lesson_info.lesson_code\n                      this.questionnaire.questionnaireTitle=data.title\n\n                      for (const t of tempList) {\n                        const oneQuestion = {\n                          questionIndex:t.index,\n                          isBoxSelected:true,\n                          questionTitle:t.desc,\n                          questionNullable:t.nullable,\n                          questionType:t.type,\n                          target_id: t.target_id,\n                          questionOptions:t.items\n                        }\n                        const oneAnswer = {\n                          isBoxSelected:true,\n                          questionId: t.index,\n                          questionTitle: t.desc,\n                          questionType: t.type,\n                          answerIndex: t.my_answer,\n                          target_id: t.target_id,\n                          answerText:''\n                        };\n                        if (oneAnswer.questionType===1){\n                          oneAnswer.answerText = t.my_answer\n                        }\n                        resList.push(oneQuestion);\n                        ansList.push(oneAnswer);\n                      }\n                      this.questionList = resList;\n                      this.answerList = ansList;\n                      if (this.buttonVisible === false){\n                        this.$message({message: \"问卷已提交，不可更改！\", duration: 2000})\n                      }else {\n                        this.$message({message: \"问卷已读取\", duration: 1000});\n                      }\n\n                    }\n                    else{\n                      this.$message({message: \"error！读取失败！\", duration: 1000})\n                      this.$router.back()\n                    }\n                    }).catch((res)=>{\n                      this.$message({message:\"error! 读取失败\",duration:1000})\n                      // this.$router.back()\n                })\n\n            },\n            submitAnswer() {\n                let postAnsList = []\n                let oneAnswer = {}\n                for (const t of this.answerList){\n                  if (t.questionType === 0){\n                    oneAnswer = {\n                      answer: t.answerIndex\n                    }\n                  }\n                  else if (t.questionType === 1){\n                    oneAnswer = {\n                      answer: t.answerText\n                    }\n                  }\n                  postAnsList.push(oneAnswer)\n                }\n                if (this.checkValidate()) {\n                    this.$http.post(\"/questionnaire/submit\", {\n                        id:this.$route.params.qid,\n                        answerList: postAnsList\n                    }).then(() => {\n                        this.submitVisible = false;\n                        this.alreadySubmit = true;\n                        this.cannotSubmit = true;\n                        this.$message({message: \"问卷已提交\", duration: 1000});\n                        this.$router.back()\n                    }).catch(() => {\n                        this.$message({message: \"error！提交失败！\", duration: 1000})\n                    });\n                }\n            },\n            saveAnswer(){\n              let postAnsList = []\n              let oneAnswer = {}\n              for (const t of this.answerList){\n                if (t.questionType === 0){\n                  if (t.answerIndex === null){\n                    oneAnswer = {\n                      answer: -1\n                    }\n                  }else{\n                    oneAnswer = {\n                      answer: t.answerIndex\n                    }\n                  }\n\n                }\n                else if (t.questionType === 1){\n                  oneAnswer = {\n                    answer: t.answerText\n                  }\n                }\n                postAnsList.push(oneAnswer)\n              }\n              this.$http.post(\"/questionnaire/save\", {\n                id: this.$route.params.qid,\n                answerList: postAnsList\n              }).then(() => {\n                this.saveVisible = false;\n                this.$message({message: \"问卷已提交\", duration: 1000});\n              }).catch(() => {\n                this.$message({message: \"error！提交失败！\", duration: 1000})\n              });\n            },\n          resetAnswer() {\n                this.fetchData();\n                this.resetVisible = false;\n            },\n            checkValidate() {\n                for (const oneAnswer of this.answerList) {\n                    if (oneAnswer.questionNullable === true) {\n                        console.log('nullable', oneAnswer);\n                        continue;\n                    } else {\n                        if (oneAnswer.questionType === 0 && oneAnswer.answerIndex === null ||\n                            oneAnswer.questionType === 1 && oneAnswer.answerIndex === ''\n                        ) {\n                            console.log(oneAnswer.answerSingleCheck)\n                            console.log('error')\n                            console.log(this.answerList)\n                            this.$message.error(oneAnswer.questionId % 1000 + 1 + ' ' + oneAnswer.questionTitle + ' 是必填字段！');\n                            return false;\n                        }\n                    }\n                }\n                return true;\n            }\n        },\n        mounted() {\n            console.log(this.questionList)\n            if (this.$route.params.status === 1){\n              this.buttonVisible = false\n              this.disabled = true\n            }\n            this.fetchData();\n            this.$emit('setActiveBreadItem', 'bread_fillin_page');\n\n        }\n    }\n</script>\n\n<style scoped>\n    .main-answer-list {\n        position: relative;\n        text-align: left;\n        box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\n    }\n\n    .box-card {\n        padding-left: 5%;\n    }\n\n    .nullable-star {\n        color: red;\n    }\n\n    .singleoptiongroup{\n      display: flex;\n      flex-direction: column;\n    }\n\n    .singleoption{\n      padding-bottom: 15px;\n      padding-top: 15px;\n    }\n\n</style>\n"]}]}