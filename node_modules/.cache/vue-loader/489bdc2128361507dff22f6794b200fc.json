{"remainingRequest":"F:\\github\\guetsurveystar\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\github\\guetsurveystar\\src\\components\\questionnaire\\MainQuestionList.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\github\\guetsurveystar\\src\\components\\questionnaire\\MainQuestionList.vue","mtime":1592581268046},{"path":"F:\\github\\guetsurveystar\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\github\\guetsurveystar\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"F:\\github\\guetsurveystar\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\github\\guetsurveystar\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["MainQuestionList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+HA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"MainQuestionList.vue","sourceRoot":"src/components/questionnaire","sourcesContent":["<template>\n    <div>\n        <div class=\"main-question-list\">\n            <div style=\"padding: 0; display: inline\">\n                <el-card style=\"position: relative; text-align: center\">\n                    <div class=\"box-is-not-selected-wrapper\" @click=\"editTitle\">\n                        <div v-if=\"questionnaire.isBoxSelected===false\" class=\"box-is-not-selected\">\n                            <h1>{{questionnaire.questionnaireTitle}}</h1>\n                            <h3>{{questionnaire.lessonNo}}</h3>\n                            开始时间：<h3>{{}}</h3>\n                            结束时间：<h3>{{questionnaire.time[1]}}</h3>\n                        </div>\n\n                        <div class=\"edit-icon\"><i class=\"el-icon-edit-outline\"></i></div>\n                    </div>\n                    <div v-if=\"questionnaire.isBoxSelected===true\">\n                        <el-form>\n                            <el-form-item>\n                                标题：\n                                <el-input\n                                        type=\"text\" style=\"max-width: 20%\"\n                                        placeholder=\"请输入问卷标题\"\n                                        v-model=\"questionnaire.questionnaireTitle\"\n                                ></el-input>\n                            </el-form-item>\n                            <el-form-item>\n                                课号：\n                                <el-select v-model=\"questionnaire.lessonNo\" placeholder=\"请选择\" style=\"width: 20%\">\n                                    <el-option\n                                            v-for=\"(item,index) in this.questionnaire.mylessons\"\n                                            :key=\"index\"\n                                            :label=\"item.lesson_code + '-' + item.course_name\"\n                                            :value=\"item.lesson_code\"\n                                    @change=\"fetchmylesson\">\n                                    </el-option>\n                                </el-select>\n                            </el-form-item>\n                            <el-form-item>\n                                时间：\n                                <el-date-picker\n                                        v-model=\"questionnaire.time\"\n                                        type=\"datetimerange\"\n                                        range-separator=\"至\"\n                                        start-placeholder=\"开始日期\"\n                                        end-placeholder=\"结束日期\">\n                                </el-date-picker>\n                            </el-form-item>\n\n\n                            <el-form-item>\n                                <el-button type=\"primary\" @click=\"saveQuestionnaireTitle\">保存</el-button>\n                                <el-button @click=\"resetQuestionnaireTitle\">重置</el-button>\n                            </el-form-item>\n                        </el-form>\n                    </div>\n                </el-card>\n            </div>\n            <div style=\"height: 10px\"></div>\n\n\n            <Question v-if=\"hackReset\" v-for=\"(item,index) in questionList\"\n                      :key=\"index\"\n                      :is-box-selected=\"item.isBoxSelected\"\n                      :question-index=\"index\"\n                      :question-title=\"item.questionTitle\"\n                      :question-nullable=\"item.questionNullable\"\n                      :question-type=\"item.questionType\"\n                      :question-options=\"item.questionOptions\"\n                      :course-goals=\"courseGoals\"\n                      :course-goal=\"item.courseGoal\"\n                      @clickUnSelected=\"selectOneBox(index)\"\n                      @clickSelected=\"selectOneBox(index)\"\n                      @saveOneQuestion=\"saveOneQuestion\"\n                      @resetQuestion=\"resetQuestion(index)\"\n                      @clickDelete=\"deleteOneBox(index)\"\n            ></Question>\n            <el-card class=\"add-question\" :body-style=\"{ padding: '10px' }\" shadow=\"hover\">\n                <div class=\"add-question-inner\" @click=\"addNewQuestion(0)\"><i class=\"el-icon-plus\"></i>\n                    添加问题\n                </div>\n            </el-card>\n            <el-card style=\"text-align: center\">\n\n                <el-dialog\n                        title=\"确认删除？\"\n                        :visible.sync=\"deleteVisible\"\n                        append-to-body\n                        center\n                >\n                <span slot=\"footer\" class=\"dialog-footer\">\n                    <el-button @click=\"deleteVisible=false\" size=\"small\">取 消</el-button>\n                    <el-button @click=\"deleteQuestionnaire\" type=\"danger\" size=\"small\">确认删除</el-button>\n                </span>\n\n                </el-dialog>\n                <el-dialog\n                        title=\"发布成功\"\n                        :visible.sync=\"releaseVisible\"\n                        append-to-body\n                        center\n                >\n                    问卷链接为：\n                    <el-link class=\"copy-link\"\n                             target=\"_blank\" @click=\"copy\"\n                             :data-clipboard-text=\"'/fillin/'+this.$route.params.qid\"\n                             data-clipboard-action=\"copy\"\n                             type=\"primary\"\n                    >\n                        {{this.questionnaire.questionnaireTitle}}-点击复制\n                    </el-link>\n                    <span slot=\"footer\" class=\"dialog-footer\">\n                    <el-button @click=\"releaseEnd\" type=\"primary\">关 闭</el-button>\n                </span>\n\n                </el-dialog>\n\n                <el-button type=\"danger\" @click=\"deleteVisible = true\">删 除</el-button>\n                <el-button @click=\"saveQuestionnaire\">保 存</el-button>\n                <el-button @click=\"releaseQuestionnaire\" type=\"primary\">发 布</el-button>\n            </el-card>\n\n\n        </div>\n    </div>\n</template>\n\n<script>\n    import Question from \"./Question\";\n    import Clipboard from 'clipboard';\n\n    export default {\n        name: \"MainQuestionList\",\n        components: {Question},\n\n        data: function () {\n            return {\n                questionList: [],\n                questionnaire: {\n                    isBoxSelected: false,\n                    lessonNo: \"\",\n                    questionnaireTitle: \"请输入标题\",\n                    startTime:\"\",\n                    endTime:\"\",\n                    time:[new Date(),new Date()],\n                    mylessons:[]\n                },\n                deleteVisible: false,\n                deleted: false,\n                releaseVisible: false,\n                hackReset:true,\n                courseGoals: []\n            }\n        },\n\n        methods: {\n            fetchData() {\n                this.$http.get(\"/course/mylesson\", {\n\n                }).then((res) => {\n                    const lessons = res.data.data.lessons\n                    for (const t of lessons) {\n                        this.questionnaire.mylessons.push(t)\n                    }\n\n                    console.log(this.questionnaire.mylessons)\n                })\n                // this.$http.get(\"/questionnaire/getQuestionList\", {\n                //         questionnaireId: this.$route.params.qid\n                // }).then((res) => {\n                //     const tempList = res.data['questionList'];\n                //     const resList = [];\n                //     for (const t of tempList) {\n                //         resList.push(t);\n                //     }\n                //     this.questionList = resList;\n                //     this.$message({message: \"问卷已读取\", duration: 1000});\n                //     this.reload();\n                // }).catch(() => {\n                //     this.$message({message: \"error！问卷读取失败！\", duration: 1000});\n                // })\n                //\n                // this.$http.get(\"/questionnaire/getQuestionnaireOutline\", {\n                //         questionnaireId: this.$route.params.qid\n                // }).then((res) => {\n                //     const temp = {\n                //         isBoxSelected: false,\n                //         questionnaireTitle: res.data['questionnaire']['title'],\n                //         questionnaireId: res.data['questionnaire']['questionnaireId'],\n                //     };\n                //     this.questionnaire = temp;\n                // }).catch(() => {\n                //     this.$message({message: \"error！问卷概况读取失败！\", duration: 1000})\n                // })\n\n            },\n\n\n            selectOneBox(index) {\n                this.questionList[index].isBoxSelected = !this.questionList[index].isBoxSelected;\n            },\n\n            resetQuestion(index) {\n                return;  // process in the question.vue\n            },\n\n            saveOneQuestion(data) {\n                const index = data['questionIndex'];\n                const oneQuestion = {\n                    questionIndex: index,\n                    isBoxSelected: true,\n                    questionTitle: data['questionTitle'],\n                    questionNullable: data['questionNullable'],\n                    questionType: data['questionType'],\n                    questionOptions: data['questionOptions'],\n                    courseGoal: data['courseGoal']\n                };\n                this.questionList.splice(index, 1, oneQuestion);\n                //数据请求部分\n                // this.$http.post(\"/questionnaire/saveOneQuestion?questionnaireId=\" + this.$route.params.qid, {\n                //     question: oneQuestion,\n                // }).then(() => {\n                //     this.$message({message: \"问卷已保存\", duration: 1000});\n                // }).catch(() => {\n                //     this.$message({message: \"error！问卷未保存！\", duration: 1000});\n                // });\n            },\n\n            deleteOneBox(index){\n                console.log(this.questionList.splice(index,1))\n              for(let i=index; i<this.questionList.length; i++){\n                this.questionList[i].questionIndex--;\n              }\n              this.reload()\n            },\n            addNewQuestion(type) {\n                const newQuestion = {\n                    questionIndex: this.questionList.length,\n                    isBoxSelected: true,\n                    questionTitle: \"\",\n                    questionNullable: false,\n                    questionType: type,\n                    questionOptions: [\n                      {\"myoption\":'',\n                      \"score\":0\n                    }],\n                    courseGoal: 0\n                };\n                this.questionList.push(newQuestion);\n            },\n            saveQuestionnaireTitle() {\n                this.questionnaire.isBoxSelected = false;\n                // this.$http.post(\"/questionnaire/saveQuestionnaireOutline\", {\n                //     questionnaire: this.questionnaire,\n                // }).then(() => {\n                //     this.$message({message: \"问卷已保存\", duration: 1000});\n                // }).catch(() => {\n                //     this.$message({message: \"error！问卷未保存！\", duration: 1000});\n                // });\n            },\n            resetQuestionnaireTitle() {\n                this.questionnaire = {\n                    isBoxSelected: false,\n                    questionnaireTitle: \"请输入标题\",\n                    questionnaireId: this.$route.params.qid,\n                };\n            },\n            editTitle() {\n                this.questionnaire.isBoxSelected = true;\n            },\n            saveQuestionnaire() {\n                this.$http.post(\"/questionnaire/edit\", {\n\n                    questionnaire:\n                      {\n                          questionnaireId: parseInt(this.$route.params.qid),\n                        lessonNo: this.questionnaire.lessonNo,\n                        startTime: this.questionnaire.time[0].getTime(),\n                        endTime: this.questionnaire.time[1].getTime()\n                      },\n                    questionList: this.questionList,\n                }).then(() => {\n                    this.$message({message: \"问卷已保存\", duration: 1000});\n                }).catch(() => {\n                    this.$message({message: \"error！问卷未保存！\", duration: 1000});\n                });\n                // this.$router.back();\n            },\n            deleteQuestionnaire() {\n                this.deleteVisible = false;\n                this.$http.get('/questionnaire/deleteQuestionnaire', {\n                    questionnaireId: this.questionnaire.questionnaireId\n                    }).then((response) => {\n                    console.log(response);\n                    this.$router.back();\n                    this.deleted = true;\n                    this.$message({message: \"问卷已删除\", duration: 1000});\n                })\n            },\n            releaseQuestionnaire() {\n                this.$http.post(\"/questionnaire/releaseQuestionnaire\",{\n                    questionList: this.questionList,\n                    questionnaire: this.questionnaire\n                })\n                    .then(() => {\n                        this.$message({message: \"问卷已发布\", duration: 1000});\n                    }).catch(() => {\n                    this.$message({message: \"error！问卷未发布！\", duration: 1000});\n                });\n                this.releaseVisible = true;\n            },\n            releaseEnd() {\n                this.releaseVisible = false;\n                this.$router.back();\n            },\n            reload(){\n              this.hackReset=false\n              this.$nextTick(()=>{\n                this.hackReset=true\n              })\n            },\n            copy() {\n                const clipboard = new Clipboard('.copy-link')\n                clipboard.on('success', e => {\n                    console.log('复制成功')\n                    this.$message({message: \"复制成功\", duration: 1000})\n                    // 释放内存\n                    clipboard.destroy()\n                })\n                clipboard.on('error', e => {\n                    // 不支持复制\n                    console.log('该浏览器不支持自动复制')\n                    // 释放内存\n                    clipboard.destroy()\n                })\n            },\n            fetchmylesson(){\n                this.$http.get(\"/course/mylesson\", {\n\n                }).then((res) => {\n                    const lessons = res.data.data.lessons\n                    console.log(\"l\")\n                    console.log(lessons)\n                    let courseNo = ''\n                    for (const t of lessons) {\n                        if (t.lesson_code ===this.questionnaire.lessonNo){\n                            courseNo = t.course_code\n                        }\n                    }\n                    if (courseNo===''){\n                        this.$message({message: \"error！读取课程目标失败\", duration: 1000});\n                    }\n                    this.$http.get(\"course/target/\"+courseNo,{\n\n                    }).then((tres) => {\n                        const targetList = tres.data.data.targets\n                        const resList = [];\n                        for (const t of targetList) {\n                            resList.push(t)\n                        }\n                        this.courseGoals = resList\n                    })\n                })\n                console.log(this.courseGoals)\n            }\n\n        },\n\n        created() {\n            console.log(this.$route.params.qid)\n            if (null != this.$route.params.qid ){\n              this.fetchData();\n            }\n        }\n    }\n</script>\n\n<style scoped>\n    .main-question-list {\n        height: 100%;\n        background-color: white;\n        box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\n    }\n\n    .add-question-inner {\n        width: 50%;\n        height: 50px;\n        padding-top: 25px;\n        text-align: center;\n        margin-left: auto;\n        margin-right: auto;\n        border-color: rgba(128, 128, 128, 0.5);\n        color: rgba(128, 128, 128, 0.5);\n        border-width: 2px;\n        border-style: dashed;\n        font-weight: bolder;\n        cursor: pointer;\n    }\n\n    .box-is-not-selected {\n        position: relative;\n    }\n\n    .box-is-not-selected-wrapper {\n        cursor: pointer;\n    }\n\n    .box-is-not-selected-wrapper:hover .box-is-not-selected {\n        filter: blur(8px);\n    }\n\n    .edit-icon {\n        display: none;\n    }\n\n    .box-is-not-selected-wrapper:hover .edit-icon {\n        display: inline;\n        height: 100%;\n        width: 100%;\n        background-color: rgba(179, 229, 252, 0.3);\n        position: absolute;\n        top: 0;\n        left: 0;\n    }\n\n    .el-icon-edit-outline {\n        position: absolute;\n        top: calc(50% - 30px);\n        left: calc(50% - 30px);\n        font-size: 60px;\n        color: rgba(128, 0, 128, 0.6);\n    }\n\n</style>\n"]}]}