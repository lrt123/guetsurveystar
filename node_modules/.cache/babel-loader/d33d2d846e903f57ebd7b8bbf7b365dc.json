{"remainingRequest":"F:\\github\\guetsurveystar\\node_modules\\babel-loader\\lib\\index.js!F:\\github\\guetsurveystar\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\github\\guetsurveystar\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\github\\guetsurveystar\\src\\components\\login\\RegisterPage.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\github\\guetsurveystar\\src\\components\\login\\RegisterPage.vue","mtime":1591836639874},{"path":"F:\\github\\guetsurveystar\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\github\\guetsurveystar\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"F:\\github\\guetsurveystar\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\github\\guetsurveystar\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmciOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGJ0bjogewogICAgICAgIGljb246ICcnLAogICAgICAgIHN0YXR1czogZmFsc2UsCiAgICAgICAgdGV4dDogJ+azqCDlhownCiAgICAgIH0sCiAgICAgIG1mb3JtOiB7CiAgICAgICAgdXNlcm5hbWU6ICcnLAogICAgICAgIHBhc3N3ZDogJycsCiAgICAgICAgcGFzc3dkMjogJycsCiAgICAgICAgbmFtZTogJycsCiAgICAgICAgcGhvbmVOdW1iZXI6ICcnLAogICAgICAgIGNvbXBhbnk6ICcnCiAgICAgIH0sCiAgICAgIHJ1bGVzOiB7CiAgICAgICAgdXNlcm5hbWU6IFt7CiAgICAgICAgICByZXF1aXJlZDogdHJ1ZSwKICAgICAgICAgIG1lc3NhZ2U6ICfor7fovpPlhaXms6jlhozotKblj7cnLAogICAgICAgICAgdHJpZ2dlcjogJ2JsdXInCiAgICAgICAgfSwgewogICAgICAgICAgbWluOiA2LAogICAgICAgICAgbWF4OiAxNiwKICAgICAgICAgIG1lc3NhZ2U6ICfplb/luqblnKggNiDliLAgMTYg5Liq5a2X56ymJywKICAgICAgICAgIHRyaWdnZXI6ICdibHVyJwogICAgICAgIH1dLAogICAgICAgIHBhc3N3ZDogW3sKICAgICAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgICAgICAgbWVzc2FnZTogJ+ivt+i+k+WFpeWvhueggScsCiAgICAgICAgICB0cmlnZ2VyOiAnYmx1cicKICAgICAgICB9LCB7CiAgICAgICAgICBtaW46IDgsCiAgICAgICAgICBtYXg6IDE2LAogICAgICAgICAgbWVzc2FnZTogJ+mVv+W6puWcqCA4IOWIsCAxNiDkuKrlrZfnrKYnLAogICAgICAgICAgdHJpZ2dlcjogJ2JsdXInCiAgICAgICAgfV0sCiAgICAgICAgcGFzc3dkMjogW3sKICAgICAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgICAgICAgbWVzc2FnZTogJ+ivt+WGjei+k+S4gOmBjeWvhueggScsCiAgICAgICAgICB0cmlnZ2VyOiAnYmx1cicKICAgICAgICB9LCB7CiAgICAgICAgICBtaW46IDgsCiAgICAgICAgICBtYXg6IDE2LAogICAgICAgICAgbWVzc2FnZTogJ+mVv+W6puWcqCA4IOWIsCAxNiDkuKrlrZfnrKYnLAogICAgICAgICAgdHJpZ2dlcjogJ2JsdXInCiAgICAgICAgfSwgewogICAgICAgICAgdmFsaWRhdG9yOiB0aGlzLnZhbGlkYXRlUGFzc3dkQWdhaW4sCiAgICAgICAgICB0cmlnZ2VyOiAnYmx1cicKICAgICAgICB9XSwKICAgICAgICBuYW1lOiBbewogICAgICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICAgICAgICBtZXNzYWdlOiAn6K+36L6T5YWl5ZCN5a2XJywKICAgICAgICAgIHRyaWdnZXI6ICdibHVyJwogICAgICAgIH1dLAogICAgICAgIHBob25lTnVtYmVyOiBbewogICAgICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICAgICAgICBtZXNzYWdlOiAn6K+36L6T5YWl5omL5py65Y+3JywKICAgICAgICAgIHRyaWdnZXI6ICdibHVyJwogICAgICAgIH0sIHsKICAgICAgICAgIHZhbGlkYXRvcjogdGhpcy52YWxpZGF0ZVBob25lTnVtYmVyLAogICAgICAgICAgdHJpZ2dlcjogJ2JsdXInCiAgICAgICAgfV0sCiAgICAgICAgY29tcGFueTogW3sKICAgICAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgICAgICAgbWVzc2FnZTogJ+ivt+i+k+WFpeWFrOWPuOWQjeensCcsCiAgICAgICAgICB0cmlnZ2VyOiAnYmx1cicKICAgICAgICB9XQogICAgICB9CiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgLy/pqozor4HkuKTmrKHlr4bnoIHovpPlhaXmmK/lkKbkuIDoh7QKICAgIHZhbGlkYXRlUGFzc3dkQWdhaW46IGZ1bmN0aW9uIHZhbGlkYXRlUGFzc3dkQWdhaW4ocnVsZSwgdmFsdWUsIGNhbGxiYWNrKSB7CiAgICAgIGlmICh0aGlzLm1mb3JtLnBhc3N3ZCAhPSAiIiAmJiB0aGlzLm1mb3JtLnBhc3N3ZDIgIT0gIiIgJiYgdGhpcy5tZm9ybS5wYXNzd2QgIT0gdGhpcy5tZm9ybS5wYXNzd2QyKSB7CiAgICAgICAgY2FsbGJhY2sobmV3IEVycm9yKCfkuKTmrKHovpPlhaXlr4bnoIHkuI3kuIDoh7QnKSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgLy/lpoLmnpzmr4/kuKrliIbmlK/kuI3ov5Tlm55jYWxsYmFja+WwseS8muWvvOiHtOaXoOazlei/m+ihjHRoaXMuJHJlZnMubWZvcm0udmFsaWRhdGXliKTmlq0KICAgICAgICBjYWxsYmFjaygpOwogICAgICB9CiAgICB9LAogICAgLy/pqozor4Hpgq7nrrHmoLzlvI8KICAgIHZhbGlkYXRlRW1haWxGb3JtYXQ6IGZ1bmN0aW9uIHZhbGlkYXRlRW1haWxGb3JtYXQocnVsZSwgdmFsdWUsIGNhbGxiYWNrKSB7CiAgICAgIHZhciByZWcgPSAvXltBLVphLXowLTlcdTRlMDAtXHU5ZmE1XStAW2EtekEtWjAtOV8tXSsoXC5bYS16QS1aMC05Xy1dKykrJC87CgogICAgICBpZiAoIXJlZy50ZXN0KHZhbHVlKSkgewogICAgICAgIGNhbGxiYWNrKG5ldyBFcnJvcign6YKu566x5qC85byP6ZSZ6K+vJykpOwogICAgICB9IGVsc2UgewogICAgICAgIGNhbGxiYWNrKCk7CiAgICAgIH0KICAgIH0sCiAgICAvL+mqjOivgeaJi+acuuWPt+agvOW8jwogICAgdmFsaWRhdGVQaG9uZU51bWJlcjogZnVuY3Rpb24gdmFsaWRhdGVQaG9uZU51bWJlcihydWxlLCB2YWx1ZSwgY2FsbGJhY2spIHsKICAgICAgdmFyIHJlZyA9IC9eMVszNTY3ODldXGR7OX0vOwoKICAgICAgaWYgKCFyZWcudGVzdCh2YWx1ZSkpIHsKICAgICAgICBjYWxsYmFjayhuZXcgRXJyb3IoJ+aJi+acuuWPt+agvOW8j+mUmeivrycpKTsKICAgICAgfSBlbHNlIHsKICAgICAgICBjYWxsYmFjaygpOwogICAgICB9CiAgICB9LAogICAgLy/mlLnlj5jms6jlhozmjInpkq7nirbmgIEKICAgIHNldExvYWRpbkJ0blN0YXR1czogZnVuY3Rpb24gc2V0TG9hZGluQnRuU3RhdHVzKHN0YXR1cykgewogICAgICB0aGlzLmJ0bi5zdGF0dXMgPSBzdGF0dXM7CiAgICAgIHRoaXMuYnRuLmljb24gPSBzdGF0dXMgPyAnZWwtaWNvbi1sb2FkaW5nJyA6ICcnOwogICAgICB0aGlzLmJ0bi50ZXh0ID0gc3RhdHVzID8gJ+azqOWGjOS4rS4uLicgOiAn5rOoIOWGjCc7CiAgICB9LAogICAgLy/mj5DkuqTooajljZUKICAgIHJlZ2lzdGVyOiBmdW5jdGlvbiByZWdpc3RlcigpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHRoaXMuJHJlZnMubWZvcm0udmFsaWRhdGUoZnVuY3Rpb24gKHZhbGlkKSB7CiAgICAgICAgaWYgKHZhbGlkKSB7CiAgICAgICAgICBfdGhpcy5zZXRMb2FkaW5CdG5TdGF0dXModHJ1ZSk7CgogICAgICAgICAgdmFyIG1zZywgbXR5cGU7CiAgICAgICAgICB2YXIgbWRhdGEgPSB7CiAgICAgICAgICAgICdhY2NvdW50JzogX3RoaXMubWZvcm0udXNlcm5hbWUsCiAgICAgICAgICAgICduYW1lJzogX3RoaXMubWZvcm0ubmFtZSwKICAgICAgICAgICAgJ3Bhc3N3b3JkJzogX3RoaXMubWZvcm0ucGFzc3dkLAogICAgICAgICAgICAncGhvbmUnOiBfdGhpcy5tZm9ybS5waG9uZU51bWJlciwKICAgICAgICAgICAgJ2NuJzogX3RoaXMubWZvcm0uY29tcGFueQogICAgICAgICAgfTsKCiAgICAgICAgICBfdGhpcy4kaHR0cC5wb3N0KCcvdXNlci9yZWdpc3RlcicsIG1kYXRhKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgICAgICB2YXIgZGF0YSA9IHJlc3BvbnNlLmRhdGE7CiAgICAgICAgICAgIG1zZyA9IGRhdGEubXNnOwoKICAgICAgICAgICAgaWYgKGRhdGEuY29kZSA9PSAwKSB7CiAgICAgICAgICAgICAgbXR5cGUgPSAnc3VjY2Vzcyc7CiAgICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICBsb2NhdGlvbi5yZWxvYWQoKTsKICAgICAgICAgICAgICB9LCA1MDApOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgIG10eXBlID0gJ3dhcm5pbmcnOwogICAgICAgICAgICB9CiAgICAgICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICAgICAgbXNnID0gJ+ivt+axgumUmeivr++8gSc7CiAgICAgICAgICAgIG10eXBlID0gJ2Vycm9yJzsKICAgICAgICAgIH0pLmZpbmFsbHkoZnVuY3Rpb24gKCkgewogICAgICAgICAgICBfdGhpcy5zZXRMb2FkaW5CdG5TdGF0dXMoZmFsc2UpOwoKICAgICAgICAgICAgX3RoaXMuJG1lc3NhZ2UoewogICAgICAgICAgICAgIHR5cGU6IG10eXBlLAogICAgICAgICAgICAgIG1lc3NhZ2U6IG1zZywKICAgICAgICAgICAgICBjZW50ZXI6IHRydWUsCiAgICAgICAgICAgICAgZHVyYXRpb246IDI1MDAKICAgICAgICAgICAgfSk7CiAgICAgICAgICB9KTsKICAgICAgICB9CiAgICAgIH0pOwogICAgfQogIH0KfTs="},{"version":3,"sources":["RegisterPage.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <el-form ref=\"mform\" :model=\"mform\" :rules=\"rules\" >\r\n        <el-form-item class=\"login-margin-top\" prop=\"username\">\r\n            <el-input v-model.trim=\"mform.username\" prefix-icon=\"el-icon-user\" placeholder=\"* 请输入注册账号(长度为6到16个字符)\" minlength=\"8\" maxlength=\"16\" clearable></el-input>\r\n        </el-form-item>\r\n        <el-form-item  prop=\"passwd\">\r\n            <el-input v-model.trim=\"mform.passwd\" prefix-icon=\"el-icon-lock\" placeholder=\"* 请输入密码(长度为8到16个字符)\" minlength=\"8\" maxlength=\"16\" show-password></el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"passwd2\">\r\n            <el-input v-model.trim=\"mform.passwd2\" prefix-icon=\"el-icon-lock\" placeholder=\"* 请再输一遍密码\" minlength=\"8\" maxlength=\"16\" show-password></el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"name\">\r\n            <el-input v-model.trim=\"mform.name\" prefix-icon=\"el-icon-document\" placeholder=\"* 请输入名字\" clearable></el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"phoneNumber\">\r\n            <el-input v-model.trim=\"mform.phoneNumber\" prefix-icon=\"el-icon-phone-outline\" placeholder=\"* 请输入手机号\" minlength=\"11\" maxlength=\"11\" clearable></el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"company\">\r\n            <el-input v-model.trim=\"mform.company\" prefix-icon=\"el-icon-office-building\" placeholder=\"* 请输入公司名字\" clearable></el-input>\r\n        </el-form-item>\r\n        <el-form-item>\r\n            <el-button class=\"login-btn\" :disabled=\"btn.status\" :icon=\"btn.icon\" type=\"primary\" @click=\"register\" round> {{ btn.text }} </el-button>\r\n        </el-form-item>\r\n    </el-form>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    data() {\r\n        return {\r\n            btn: {\r\n                icon: '',\r\n                status: false,\r\n                text: '注 册'\r\n            },\r\n            mform : {\r\n                username: '',\r\n                passwd: '',\r\n                passwd2: '',\r\n                name: '',\r\n                phoneNumber: '',\r\n                company: ''\r\n            },\r\n            rules: {\r\n                username: [\r\n                    { required: true, message: '请输入注册账号', trigger: 'blur' },\r\n                    { min: 6, max: 16, message: '长度在 6 到 16 个字符', trigger: 'blur' }\r\n                ],\r\n                passwd: [\r\n                    { required: true, message: '请输入密码', trigger: 'blur' },\r\n                    { min: 8, max: 16, message: '长度在 8 到 16 个字符', trigger: 'blur' }\r\n                ],\r\n                passwd2: [\r\n                    { required: true, message: '请再输一遍密码', trigger: 'blur' },\r\n                    { min: 8, max: 16, message: '长度在 8 到 16 个字符', trigger: 'blur' },\r\n                    { validator: this.validatePasswdAgain, trigger: 'blur' }\r\n                ],\r\n                name: [\r\n                    { required: true, message: '请输入名字', trigger: 'blur' },\r\n                ],\r\n                phoneNumber: [\r\n                    { required: true, message: '请输入手机号', trigger: 'blur' },\r\n                    { validator: this.validatePhoneNumber, trigger: 'blur' }\r\n                ],\r\n                company: [\r\n                    { required: true, message: '请输入公司名称', trigger: 'blur' }\r\n                ],\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        //验证两次密码输入是否一致\r\n        validatePasswdAgain(rule, value, callback) {\r\n            if (this.mform.passwd != \"\" && this.mform.passwd2 != \"\" && this.mform.passwd != this.mform.passwd2 ) {\r\n                callback(new Error('两次输入密码不一致'));\r\n            } else {\r\n                //如果每个分支不返回callback就会导致无法进行this.$refs.mform.validate判断\r\n                callback(); \r\n            }\r\n        },\r\n        //验证邮箱格式\r\n        validateEmailFormat(rule, value, callback) {\r\n            let reg = /^[A-Za-z0-9\\u4e00-\\u9fa5]+@[a-zA-Z0-9_-]+(\\.[a-zA-Z0-9_-]+)+$/\r\n            if (!reg.test(value)) {\r\n                callback(new Error('邮箱格式错误'));\r\n            } else {\r\n                callback();\r\n            }\r\n        },\r\n        //验证手机号格式\r\n        validatePhoneNumber(rule, value, callback) {\r\n            let reg = /^1[356789]\\d{9}/\r\n            if (!reg.test(value)) {\r\n                callback(new Error('手机号格式错误'));\r\n            } else {\r\n                callback();\r\n            } \r\n        },\r\n        //改变注册按钮状态\r\n        setLoadinBtnStatus(status) {\r\n            this.btn.status = status;\r\n            this.btn.icon = (status) ? 'el-icon-loading': '';\r\n            this.btn.text = (status) ? '注册中...': '注 册';\r\n        },\r\n        //提交表单\r\n        register() {\r\n            this.$refs.mform.validate((valid) => {\r\n                if (valid) {\r\n                    this.setLoadinBtnStatus(true);\r\n                    let msg, mtype;\r\n                    let mdata = {\r\n                        'account': this.mform.username,\r\n                        'name': this.mform.name,\r\n                        'password': this.mform.passwd,\r\n                        'phone': this.mform.phoneNumber,\r\n                        'cn': this.mform.company\r\n                    };\r\n                    \r\n                    this.$http.post('/user/register',mdata)\r\n                        .then(response =>{\r\n                            let data = response.data;\r\n                            msg = data.msg;\r\n                            if (data.code == 0){\r\n                                mtype = 'success';\r\n                                setTimeout(() => { location.reload() }, 500);\r\n                            } else {\r\n                                mtype = 'warning';\r\n                            }\r\n                        })\r\n                        .catch(error => {\r\n                            msg = '请求错误！';\r\n                            mtype = 'error'\r\n                        })\r\n                        .finally(() => {\r\n                            this.setLoadinBtnStatus(false);\r\n                            this.$message({\r\n                                type: mtype,\r\n                                message: msg,\r\n                                center: true,\r\n                                duration: 2500\r\n                                });\r\n                        });\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"],"sourceRoot":"src/components/login"}]}