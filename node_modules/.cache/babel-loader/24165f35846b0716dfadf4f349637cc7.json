{"remainingRequest":"F:\\github\\guetsurveystar\\node_modules\\babel-loader\\lib\\index.js!F:\\github\\guetsurveystar\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\github\\guetsurveystar\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\github\\guetsurveystar\\src\\components\\questionnaire\\FillIn.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\github\\guetsurveystar\\src\\components\\questionnaire\\FillIn.vue","mtime":1592572377231},{"path":"F:\\github\\guetsurveystar\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\github\\guetsurveystar\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"F:\\github\\guetsurveystar\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\github\\guetsurveystar\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["FillIn.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <el-row>\n      <el-col class=\"main-answer-list\" :sm=\"24\" :md=\"{span:18,offset:3}\" :lg=\"{span:16,offset:4}\"\n              :xl=\"{span:14,offset:5}\">\n        <el-card shadow=\"always\" class=\"box-card\">\n          <div v-if=\"questionnaire.isBoxSelected===false\">\n            <h1>{{questionnaire.questionnaireTitle}}</h1>\n            <h3>{{questionnaire.lessonNo}}</h3>\n          </div>\n        </el-card>\n        <el-form >\n          <div v-for=\"(item,index) in questionList\"\n               :key=\"index\">\n            <el-card class=\"box-card\">\n              <el-form-item>\n                <div class=\"question-title-div\">\n                  <div style=\"display: inline\"><b>{{index+1}}. {{item.questionTitle}}</b></div>\n                  <div style=\"display: inline\" v-if=\"item.questionNullable===false\" class=\"nullable-star\">\n                    *\n                  </div>\n                </div>\n\n              </el-form-item>\n\n              <el-form-item>\n                <el-radio-group class=\"singleoptiongroup\" v-if=\"item.questionType===0\"\n                                v-model=\"answerList[index].answerSingleCheck\">\n                  <el-radio class=\"singleoption\" v-for=\"(optionItem,optionIndex) in item.questionOptions\" :key=\"optionIndex\"\n                            :label=\"optionItem.myoption\" >{{optionItem.myoption}}\n                  </el-radio>\n                </el-radio-group>\n\n\n\n                <el-input v-else-if=\"item.questionType===1\"\n                          type=\"textarea\" style=\"max-width: 80%\"\n                          placeholder=\"请输入内容\"\n                          v-model=\"answerList[index].answerText\"\n                ></el-input>\n\n              </el-form-item>\n            </el-card>\n\n          </div>\n\n\n          <el-form-item>\n            <el-card class=\"box-card\" style=\"width: 100%\">\n\n              <el-dialog\n                width=\"70%\"\n                title=\"确认提交？\"\n                :visible.sync=\"submitVisible\"\n                append-to-body\n                center\n              >\n                            <span slot=\"footer\" class=\"dialog-footer\">\n                                <el-button @click=\"submitVisible = false\">取 消</el-button>\n                                <el-button @click=\"submitAnswer\" type=\"primary\">确认提交</el-button>\n                            </span>\n\n              </el-dialog>\n              <el-dialog\n                width=\"70%\"\n                title=\"确认保存？\"\n                :visible.sync=\"saveVisible\"\n                append-to-body\n                center\n              >\n                            <span slot=\"footer\" class=\"dialog-footer\">\n                                <el-button @click=\"saveVisible = false\">取 消</el-button>\n                                <el-button @click=\"submitAnswer\" type=\"primary\">确认保存</el-button>\n                            </span>\n\n              </el-dialog>\n              <el-dialog\n                width=\"70%\"\n                title=\"确认重置？\"\n                :visible.sync=\"resetVisible\"\n                append-to-body\n                center\n              >\n                            <span slot=\"footer\" class=\"dialog-footer\">\n                                <el-button @click=\"resetVisible = false\">取 消</el-button>\n                                <el-button @click=\"resetAnswer\" type=\"primary\">确认重置</el-button>\n                            </span>\n\n              </el-dialog>\n              <div>\n                <el-button type=\"primary\" @click=\"submitVisible = true\">提 交</el-button>\n                <el-button @click=\"saveVisible = true\">保 存</el-button>\n                <el-button @click=\"resetVisible = true\">重 置</el-button>\n              </div>\n\n            </el-card>\n          </el-form-item>\n        </el-form>\n\n      </el-col>\n    </el-row>\n  </div>\n\n\n</template>\n\n<script>\n    export default {\n        name: \"FillIn\",\n        data: function () {\n            return {\n                questionList: [{\n                  questionIndex:0,\n                  isBoxSelected:true,\n                  questionTitle:\"问题1\",\n                  questionNullable:false,\n                  questionType:0,\n                  courseGoal: 0,\n                  questionOptions:[{\"myoption\":\"能\",\"score\":\"5\"},{\"myoption\":\"大部分能\",\"score\":\"3\"},{\"myoption\":\"可以\",\"score\":\"2\"},{\"myoption\":\"不能\",\"score\":\"1\"}]\n                },\n                  {\n                    questionIndex:1,\n                    isBoxSelected:true,\n                    questionTitle:\"你有什么意见？\",\n                    questionNullable:false,\n                    questionType:1,\n\n                  }],\n                answerList: [],\n                questionnaire: {\n                    isBoxSelected: false,\n                    lessonNo: \"1911266\",\n                    questionnaireTitle: \"软件项目管理课程目标调查\",\n                    questionnaireId: this.$route.params.qid,\n                },\n                submitVisible: false,\n                resetVisible: false,\n                alreadySubmit: null,\n                saveVisible: false,\n                cannotSubmit: null,\n            }\n        },\n        computed: {\n            aaa: function () {\n                return {\n                    answerList: this.answerList,\n                }\n            }\n        },\n        methods: {\n            fetchData() {\n              /*单机*/\n                      const tempList = this.questionList;\n                      const ansList = [];\n                      for (const t of tempList) {\n                          const oneAnswer = {\n                              questionId: t['questionId'],\n                              questionTitle: t['questionTitle'],\n                              questionType: t['questionType'],\n                              questionNullable: t['questionNullable'],\n                              answerSingleCheck: '',\n                              answerText: '',\n                              courseGoal: t['courseGoal']\n                          };\n                          ansList.push(oneAnswer);\n                      }\n                      this.answerList=ansList\n              /*单机*/\n\n            //     if(localStorage.getItem('Ip')){\n            //         this.axios.get(\"http://api.tianapi.com/txapi/ipquery/index?key=68b512d1b0023c2a4db0818a4854700c\").then((res) => {\n            //             const Ip = res.data['newslist'][0]['ip']\n            //             console.log(res,Ip)\n            //             localStorage.setItem('Ip', Ip)\n            //             this.ip = localStorage.getItem('Ip')\n            //         }).catch(() => {\n            //             this.$message({message: \"error！IP地址检测失败！\", duration: 1000})\n            //         });\n            //     }\n            //     this.axios.get(\"/api/fillin/getQuestionList\", {\n            //         params: {\n            //             questionnaireId: this.$route.params.qid,\n            //         }\n            //     }).then((res) => {\n            //         const tempList = res.data['questionList'];\n            //         const resList = [];\n            //         const ansList = [];\n            //         for (const t of tempList) {\n            //             t['date'] = new Date(t['date']);\n            //             resList.push(t);\n            //             const oneAnswer = {\n            //                 questionId: t['questionId'],\n            //                 questionTitle: t['questionTitle'],\n            //                 questionType: t['questionType'],\n            //                 questionNullable: t['questionNullable'],\n            //                 answerSingleCheck: '',\n            //                 answerMultiCheck: [],\n            //                 answerText: '',\n            //                 answerNumber: t['defaultNumber'],\n            //                 answerGrade: 0,\n            //                 answerDate: t['date'],\n            //             };\n            //             ansList.push(oneAnswer);\n            //         }\n            //         this.questionList = resList;\n            //         this.answerList = ansList;\n            //         this.$message({message: \"问卷已读取\", duration: 1000});\n            //     }).catch(() => {\n            //         this.$message({message: \"error！问卷读取失败！\", duration: 1000});\n            //     })\n            //\n            //     this.axios.get(\"/api/fillin/getQuestionnaireOutline\", {\n            //         params: {\n            //             questionnaireId: this.$route.params.qid\n            //         }\n            //     }).then((res) => {\n            //         const temp = {\n            //             isBoxSelected: false,\n            //             lessonNo: res.data['questionnaire']['description'],\n            //             questionnaireTitle: res.data['questionnaire']['title'],\n            //             questionnaireId: res.data['questionnaire']['questionnaireId'],\n            //         };\n            //         if (res.data['questionnaire']['status'] === 'closed') {\n            //             this.$message.error({message: \"error！问卷已关闭！\", duration: 0});\n            //             this.cannotSubmit = true;\n            //         }\n            //         this.questionnaire = temp;\n            //     }).catch(() => {\n            //         this.$message({message: \"error!问卷概况读取失败！\", duration: 1000})\n            //     })\n            },\n            submitAnswer() {\n                console.log(this.answerList)\n                if (this.checkValidate()) {\n                    this.axios.post(\"/api/fillin/submitAnswer?questionnaireId=\" + this.$route.params.qid, {\n                        answerList: this.answerList\n                    }).then(() => {\n                        this.submitVisible = false;\n                        this.alreadySubmit = true;\n                        this.cannotSubmit = true;\n                        this.$message({message: \"问卷已提交\", duration: 1000});\n                    }).catch(() => {\n                        this.$message({message: \"error！提交失败！\", duration: 1000})\n                    });\n                }\n            },\n            resetAnswer() {\n                this.fetchData();\n                this.resetVisible = false;\n            },\n            // ifShowByCheckingFront(index) {\n            //     const thisQuestion = this.questionList[index];\n            //     if (thisQuestion.frontChoose === false)\n            //         return true;\n            //\n            //     for (const oneFront of thisQuestion.frontOptions) {\n            //         const frontIndex = oneFront[0] - 1;\n            //         const frontValue = oneFront[1];\n            //         const frontQuestion = this.questionList[frontIndex];\n            //         let checkList = null;\n            //         if (frontQuestion.questionType === 0) {\n            //             checkList = this.answerList[frontIndex].answerSingleCheck;\n            //             if (frontValue != checkList) return false;\n            //         } else if (frontQuestion.questionType === 1) {\n            //             checkList = this.answerList[frontIndex].answerMultiCheck;\n            //             for (const oneOfMulti of frontValue) {\n            //                 if (checkList.indexOf(oneOfMulti) === -1)\n            //                     return false;\n            //             }\n            //         }\n            //     }\n            //     return true;\n            // },\n            checkValidate() {\n                for (const oneAnswer of this.answerList) {\n                    if (oneAnswer.questionNullable === true) {\n                        console.log('nullable', oneAnswer);\n                        continue;\n                    } else {\n                        console.log(oneAnswer.questionType === 0)\n                        if (oneAnswer.questionType === 0 && oneAnswer.answerSingleCheck === '' ||\n                            oneAnswer.questionType === 1 && oneAnswer.answerText === ''\n                        ) {\n                            console.log('error')\n                            this.$message.error(oneAnswer.questionId % 1000 + 1 + ' ' + oneAnswer.questionTitle + ' 是必填字段！');\n                            return false;\n                        }\n                    }\n                }\n                return true;\n            }\n        },\n        mounted() {\n            console.log(this.questionList)\n            this.fetchData();\n            // this.ip = localStorage.getItem('Ip')\n            //\n            //\n            // this.axios.get(\"/api/fillin/checkAlreadySubmit\", {\n            //     params: {\n            //         questionnaireId: this.$route.params.qid,\n            //         ip: this.ip\n            //     }\n            // }).then((res) => {\n            //     this.alreadySubmit = res['data']\n            //     this.cannotSubmit = this.alreadySubmit;\n            //     if (this.alreadySubmit) {\n            //         this.$message.error({message: \"您已填写过该问卷！\", duration: 0, showClose: true})\n            //     }\n            // }).catch(() => {\n            //     this.$message({message: \"error！IP地址检测失败！\", duration: 1000})\n            // });\n        }\n    }\n</script>\n\n<style scoped>\n    .main-answer-list {\n        position: relative;\n        text-align: left;\n        box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\n    }\n\n    .box-card {\n        padding-left: 5%;\n    }\n\n    .nullable-star {\n        color: red;\n    }\n\n    .singleoptiongroup{\n      display: flex;\n      flex-direction: column;\n    }\n\n    .singleoption{\n      padding-bottom: 15px;\n      padding-top: 15px;\n    }\n\n</style>\n"],"sourceRoot":"src/components/questionnaire"}]}