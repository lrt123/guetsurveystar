{"remainingRequest":"F:\\github\\guetsurveystar\\node_modules\\babel-loader\\lib\\index.js!F:\\github\\guetsurveystar\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\github\\guetsurveystar\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\github\\guetsurveystar\\src\\components\\questionnaire\\MainQuestionList.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\github\\guetsurveystar\\src\\components\\questionnaire\\MainQuestionList.vue","mtime":1593262801913},{"path":"F:\\github\\guetsurveystar\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\github\\guetsurveystar\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"F:\\github\\guetsurveystar\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\github\\guetsurveystar\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["MainQuestionList.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div>\n        <div class=\"main-question-list\">\n            <div style=\"padding: 0; display: inline\">\n                <el-card style=\"position: relative; text-align: center\">\n                    <div class=\"box-is-not-selected-wrapper\" @click=\"editTitle\">\n                        <div v-if=\"questionnaire.isBoxSelected===false\" class=\"box-is-not-selected\">\n                            <h1>{{questionnaire.questionnaireTitle}}</h1>\n                            <div v-if=\"questionnaireType===1\">\n                                <h3>{{questionnaire.lessonNo}}</h3>\n                            </div>\n                            <h3>开始时间：{{questionnaire.time[0].toLocaleDateString()+' '+questionnaire.time[0].toLocaleTimeString()}}</h3>\n                            <h3>结束时间：{{questionnaire.time[1].toLocaleDateString()+' '+questionnaire.time[1].toLocaleTimeString()}}</h3>\n                        </div>\n\n                        <div class=\"edit-icon\"><i class=\"el-icon-edit-outline\"></i></div>\n                    </div>\n                    <div v-if=\"questionnaire.isBoxSelected===true\">\n                        <el-form>\n                            <el-form-item>\n                                标题：\n                                <el-input\n                                        type=\"text\" style=\"max-width: 20%\"\n                                        placeholder=\"请输入问卷标题\"\n                                        v-model=\"questionnaire.questionnaireTitle\"\n                                ></el-input>\n                            </el-form-item>\n                            <el-form-item v-if=\"questionnaireType===1\">\n                                课号：\n                                <el-select @change=\"fetchmylesson\" v-model=\"questionnaire.lessonNo\" placeholder=\"请选择\" style=\"width: 20%\">\n                                    <el-option\n                                            v-for=\"(item,index) in this.questionnaire.mylessons\"\n                                            :key=\"index\"\n                                            :label=\"item.lesson_code + '-' + item.course_name\"\n                                            :value=\"item.lesson_code\"\n                                    >\n                                    </el-option>\n                                </el-select>\n                            </el-form-item>\n                            <el-form-item>\n                                时间：\n                                <el-date-picker\n                                        v-model=\"questionnaire.time\"\n                                        type=\"datetimerange\"\n                                        range-separator=\"至\"\n                                        start-placeholder=\"开始日期\"\n                                        end-placeholder=\"结束日期\">\n                                </el-date-picker>\n                            </el-form-item>\n\n\n                            <el-form-item>\n                                <el-button type=\"primary\" @click=\"saveQuestionnaireTitle\">保存</el-button>\n                                <el-button @click=\"resetQuestionnaireTitle\">重置</el-button>\n                            </el-form-item>\n                        </el-form>\n                    </div>\n                </el-card>\n            </div>\n            <div style=\"height: 10px\"></div>\n\n\n            <Question v-if=\"hackReset\" v-for=\"(item,index) in questionList\"\n                      :key=\"index\"\n                      :is-box-selected=\"item.isBoxSelected\"\n                      :question-index=\"index\"\n                      :question-title=\"item.questionTitle\"\n                      :question-nullable=\"item.questionNullable\"\n                      :question-type=\"item.questionType\"\n                      :question-options=\"item.questionOptions\"\n                      :course-goals=\"courseGoals\"\n                      :course-goal=\"item.courseGoal\"\n                      :questionnaire-type=\"questionnaireType\"\n                      @clickUnSelected=\"selectOneBox(index)\"\n                      @clickSelected=\"selectOneBox(index)\"\n                      @saveOneQuestion=\"saveOneQuestion\"\n                      @resetQuestion=\"resetQuestion(index)\"\n                      @clickDelete=\"deleteOneBox(index)\"\n            ></Question>\n            <div v-if=\"hackReset===false\">\n                <el-alert\n                        title=\"错误提示\"\n                        type=\"error\"\n                        center\n                        description=\"请务必先选择您的课号！\"\n                >\n\n                </el-alert>\n            </div>\n            <el-card class=\"add-question\" :body-style=\"{ padding: '10px' }\" shadow=\"hover\">\n                <div class=\"add-question-inner\" @click=\"addNewQuestion(0)\"><i class=\"el-icon-plus\"></i>\n                    添加问题\n                </div>\n            </el-card>\n            <el-card style=\"text-align: center\">\n\n                <el-dialog\n                        title=\"确认删除？\"\n                        :visible.sync=\"deleteVisible\"\n                        append-to-body\n                        center\n                >\n                <span slot=\"footer\" class=\"dialog-footer\">\n                    <el-button @click=\"deleteVisible=false\" size=\"small\">取 消</el-button>\n                    <el-button @click=\"deleteQuestionnaire\" type=\"danger\" size=\"small\">确认删除</el-button>\n                </span>\n\n                </el-dialog>\n                <el-dialog\n                        title=\"发布成功\"\n                        :visible.sync=\"releaseVisible\"\n                        append-to-body\n                        center\n                >\n                    问卷链接为：\n                    <el-link class=\"copy-link\"\n                             target=\"_blank\" @click=\"copy\"\n                             :data-clipboard-text=\"'/fillin/'+this.$route.params.qid\"\n                             data-clipboard-action=\"copy\"\n                             type=\"primary\"\n                    >\n                        {{this.questionnaire.questionnaireTitle}}-点击复制\n                    </el-link>\n                    <span slot=\"footer\" class=\"dialog-footer\">\n                    <el-button @click=\"releaseEnd\" type=\"primary\">关 闭</el-button>\n                </span>\n\n                </el-dialog>\n\n                <el-button type=\"danger\" @click=\"deleteVisible = true\">删 除</el-button>\n                <el-button @click=\"saveQuestionnaire\">保 存</el-button>\n                <el-button @click=\"releaseQuestionnaire\" type=\"primary\">发 布</el-button>\n            </el-card>\n\n\n        </div>\n    </div>\n</template>\n\n<script>\n    import Question from \"./Question\";\n    import Clipboard from 'clipboard';\n\n    export default {\n        name: \"MainQuestionList\",\n        components: {Question},\n\n        data: function () {\n            return {\n                questionList: [],\n                questionnaire: {\n                    isBoxSelected: false,\n                    lessonNo: \"\",\n                    questionnaireTitle: \"请输入标题\",\n                    time:[new Date(),new Date()],\n                    mylessons:[]\n                },\n                deleteVisible: false,\n                deleted: false,\n                releaseVisible: false,\n                hackReset:true,\n                questionnaireType: 0,\n                courseGoals: [],\n                courseNo:''\n            }\n        },\n\n        methods: {\n            fetchData() {\n                this.$http.get(\"/course/mylesson\", {}).then((res) => {\n                    const lessons = res.data.data.lessons\n                    for (const t of lessons) {\n                        this.questionnaire.mylessons.push(t)\n                    }\n                })\n\n                //获取问卷信息\n                this.$http.get(\"/questionnaire/\"+this.$route.params.qid, {\n                }).then((res) => {\n                    let data = res.data.data\n                    this.questionnaireType = data.type\n                    this.questionnaire.questionnaireTitle = data.title\n                    if (data.start_time !== \"\"){\n                        this.questionnaire.time[0] = new Date(data.start_time)\n                        this.questionnaire.time[1] = new Date(data.end_time)\n                    }\n\n                    const tempList = data.questions;\n                    const resList = [];\n                    for (const t of tempList) {\n                        const oneQuestion = {\n                            questionIndex:t.index,\n                            isBoxSelected:false,\n                            questionTitle:t.desc,\n                            questionNullable:t.nullable,\n                            questionType:t.type,\n                            courseGoal: t.target_id,\n                            questionOptions:t.items\n                        }\n                        resList.push(oneQuestion)\n                    }\n                    this.questionList = resList;\n                    if (null !== data.lesson_info){\n                        this.questionnaire.lessonNo = data.lesson_info.lesson_code\n                        this.fetchCourseGoal(data.lesson_info.course_code)\n                    }\n                    this.$message({message: \"问卷已读取\", duration: 1000});\n                    // this.reload();\n                    if (this.questionnaireType === 1 && this.questionnaire.lessonNo === \"\"){\n                        console.log('yes')\n                        this.hackReset = false\n                    }\n                })\n\n            },\n\n\n            selectOneBox(index) {\n                this.questionList[index].isBoxSelected = !this.questionList[index].isBoxSelected;\n            },\n\n            resetQuestion(index) {\n                return;  // process in the question.vue\n            },\n\n            saveOneQuestion(data) {\n                const index = data['questionIndex'];\n                const oneQuestion = {\n                    questionIndex: index,\n                    isBoxSelected: true,\n                    questionTitle: data['questionTitle'],\n                    questionNullable: data['questionNullable'],\n                    questionType: data['questionType'],\n                    questionOptions: data['questionOptions'],\n                    courseGoal: data['courseGoal']\n                };\n                this.questionList.splice(index, 1, oneQuestion);\n            },\n\n            deleteOneBox(index) {\n                console.log(this.questionList.splice(index, 1))\n                for (let i = index; i < this.questionList.length; i++) {\n                    this.questionList[i].questionIndex--;\n                }\n                this.reload()\n            },\n            addNewQuestion(type) {\n                const newQuestion = {\n                    questionIndex: this.questionList.length,\n                    isBoxSelected: true,\n                    questionTitle: \"\",\n                    questionNullable: false,\n                    questionType: type,\n                    questionOptions: [\n                        {\n                            \"myoption\": '能',\n                            \"score\": 100\n                        },\n                        {\n                            \"myoption\": '大部分能',\n                            \"score\": 80\n                        },\n                        {\n                            \"myoption\": '部分能',\n                            \"score\": 60\n                        },\n                        {\n                            \"myoption\": '大部分不能',\n                            \"score\": 40\n                        }\n                    ],\n                    courseGoal: null,\n                };\n                this.questionList.push(newQuestion);\n            },\n            saveQuestionnaireTitle() {\n                this.questionnaire.isBoxSelected = false;\n            },\n            resetQuestionnaireTitle() {\n                this.questionnaire.isBoxSelected = {\n                    isBoxSelected: false,\n                    questionnaireTitle: \"请输入标题\",\n                    questionnaireId: this.$route.params.qid,\n                };\n            },\n            editTitle() {\n                this.questionnaire.isBoxSelected = true;\n            },\n            saveQuestionnaire() {\n                this.$http.post(\"/questionnaire/edit\", {\n                    questionnaire:\n                        {\n                            questionnaireId: parseInt(this.$route.params.qid),\n                            questionnaireTitle: this.questionnaire.questionnaireTitle,\n                            lessonNo: this.questionnaire.lessonNo,\n                            startTime: this.questionnaire.time[0].getTime(),\n                            endTime: this.questionnaire.time[1].getTime()\n                        },\n                    questionList: this.questionList,\n                }).then((res) => {\n                    let data = res.data;\n                    if (data.code === 0) {\n                        this.$message({message: \"问卷已保存\", duration: 1000});\n                        this.$router.push('/manage/questionnaire');\n                    } else {\n                        this.$message({message: \"error！问卷未保存！\", duration: 1000});\n                    }\n                }).catch(() => {\n                    this.$message({message: \"error！问卷未保存！\", duration: 1000});\n                });\n\n            },\n            deleteQuestionnaire() {\n                this.deleteVisible = false;\n                this.$http.post('/questionnaire/delete', {\"id\": [this.$route.params.qid]})\n                    .then(response => {\n                        console.log(response.data);\n                        if (response.data.code == 0) {\n                            this.$message({message: \"删除成功\", duration: 1000});\n                            this.$router.back()\n                        } else if (response.data.code == 2) {\n                            this.$message({message: \"删除失败\", duration: 1000});\n                            this.deleteVisible = true\n                        }\n                    });\n            },\n            releaseQuestionnaire() {\n                this.$http.post(\"/questionnaire/edit\", {\n                    questionnaire:\n                        {\n                            questionnaireId: parseInt(this.$route.params.qid),\n                            questionnaireTitle: this.questionnaire.questionnaireTitle,\n                            lessonNo: this.questionnaire.lessonNo,\n                            startTime: this.questionnaire.time[0].getTime(),\n                            endTime: this.questionnaire.time[1].getTime()\n                        },\n                    questionList: this.questionList,\n                })\n                    .then(() => {\n                        this.$http.post('/questionnaire/status', {\"id\": this.$route.params.qid, \"status\":1})\n                            .then((res)=>{\n                                if (res.data.code===0){\n                                    this.$message({message: \"问卷已发布\", duration: 1000})\n                                }else{\n                                    this.$message({message: \"error! 问卷未发布\", duration: 1000})\n                                }\n\n                            }).catch(()=>{\n                            this.$message({message: \"error！问卷未发布！\", duration: 1000});\n                        })\n                        this.releaseEnd()\n                    }).catch(() => {\n                    this.$message({message: \"error！问卷未发布！\", duration: 1000});\n                });\n\n\n                this.releaseVisible = true;\n\n            },\n            releaseEnd() {\n                this.releaseVisible = false;\n                this.$router.push('/questionnaire/done');\n            },\n            reload() {\n                this.hackReset = false\n                this.$nextTick(() => {\n                    this.hackReset = true\n                })\n            },\n            copy() {\n                const clipboard = new Clipboard('.copy-link')\n                clipboard.on('success', e => {\n                    console.log('复制成功')\n                    this.$message({message: \"复制成功\", duration: 1000})\n                    // 释放内存\n                    clipboard.destroy()\n                })\n                clipboard.on('error', e => {\n                    // 不支持复制\n                    console.log('该浏览器不支持自动复制')\n                    // 释放内存\n                    clipboard.destroy()\n                })\n            },\n            fetchmylesson(value) {\n                this.hackReset = true\n                let courseNo = ''\n                for (const t of this.questionnaire.mylessons) {\n                    if (t.lesson_code === value) {\n                        courseNo = t.course_code\n                        if (courseNo === this.courseNo){\n                            return\n                        }\n                        this.courseNo = courseNo\n                        this.$http.get(\"course/target/\" + courseNo, {}).then((res) => {\n                            const targetList = res.data.data.Targets\n                            const resList = [];\n                            for (const t of targetList) {\n                                resList.push(t)\n                            }\n                            this.courseGoals = resList\n                        })\n                        this.reload()\n                        break;\n                    }\n                }\n            },\n            fetchCourseGoal(courseNo){\n                        this.$http.get(\"course/target/\" + courseNo, {}).then((res) => {\n                            const targetList = res.data.data.Targets\n                            const resList = [];\n                            for (const t of targetList) {\n                                resList.push(t)\n                            }\n                            this.courseGoals = resList\n                        })\n                        console.log(this.courseGoals)\n                        this.reload()\n\n            }\n        },\n\n        created() {\n            // if (null != this.$route.params.title){\n            //     this.questionnaire.questionnaireTitle = this.$route.params.title\n            // }\n            if (null != this.$route.params.type){\n                this.questionnaireType = this.$route.params.type\n            }\n            this.$emit('setActiveBreadItem', 'bread_edit_page');\n\n\n            // if (null != this.$route.params.questionList){\n            //     this.fetchCourseGoal(this.$route.params.courseNo)\n            //     this.questionList = this.$route.params.questionList\n            //     this.$http.get(\"/course/mylesson\", {}).then((res) => {\n            //         const lessons = res.data.data.lessons\n            //         for (const t of lessons) {\n            //             this.questionnaire.mylessons.push(t)\n            //         }\n            //     })\n            //     return\n            // }\n            // console.log(this.$route.params.qid)\n            if (null != this.$route.params.qid ){\n              this.fetchData();\n            }\n        }\n    }\n</script>\n\n<style scoped>\n    .main-question-list {\n        height: 100%;\n        background-color: white;\n        box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\n    }\n\n    .add-question-inner {\n        width: 50%;\n        height: 50px;\n        padding-top: 25px;\n        text-align: center;\n        margin-left: auto;\n        margin-right: auto;\n        border-color: rgba(128, 128, 128, 0.5);\n        color: rgba(128, 128, 128, 0.5);\n        border-width: 2px;\n        border-style: dashed;\n        font-weight: bolder;\n        cursor: pointer;\n    }\n\n    .box-is-not-selected {\n        position: relative;\n    }\n\n    .box-is-not-selected-wrapper {\n        cursor: pointer;\n    }\n\n    .box-is-not-selected-wrapper:hover .box-is-not-selected {\n        filter: blur(8px);\n    }\n\n    .edit-icon {\n        display: none;\n    }\n\n    .box-is-not-selected-wrapper:hover .edit-icon {\n        display: inline;\n        height: 100%;\n        width: 100%;\n        background-color: rgba(179, 229, 252, 0.3);\n        position: absolute;\n        top: 0;\n        left: 0;\n    }\n\n    .el-icon-edit-outline {\n        position: absolute;\n        top: calc(50% - 30px);\n        left: calc(50% - 30px);\n        font-size: 60px;\n        color: rgba(128, 0, 128, 0.6);\n    }\n\n</style>\n"],"sourceRoot":"src/components/questionnaire"}]}