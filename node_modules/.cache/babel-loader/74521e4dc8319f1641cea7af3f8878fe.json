{"remainingRequest":"F:\\github\\guetsurveystar\\node_modules\\babel-loader\\lib\\index.js!F:\\github\\guetsurveystar\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\github\\guetsurveystar\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\github\\guetsurveystar\\src\\components\\Analysis\\AnalysisCard.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\github\\guetsurveystar\\src\\components\\Analysis\\AnalysisCard.vue","mtime":1592912398077},{"path":"F:\\github\\guetsurveystar\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\github\\guetsurveystar\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"F:\\github\\guetsurveystar\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\github\\guetsurveystar\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm51bWJlci5jb25zdHJ1Y3RvciI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBlY2hhcnRzIGZyb20gImVjaGFydHMvbGliL2VjaGFydHMiOwppbXBvcnQgImVjaGFydHMvbGliL2NoYXJ0L2JhciI7CmltcG9ydCAiZWNoYXJ0cy9saWIvY2hhcnQvcGllIjsKaW1wb3J0ICJlY2hhcnRzL2xpYi9jb21wb25lbnQvdG9vbHRpcCI7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiQW5hbHlzaXNDYXJkIiwKICBwcm9wczogewogICAgcXVlc3Rpb25JbmRleDogTnVtYmVyLAogICAgcXVlc3Rpb25JZDogTnVtYmVyLAogICAgcXVlc3Rpb25UaXRsZTogU3RyaW5nLAogICAgcXVlc3Rpb25UeXBlOiBOdW1iZXIsCiAgICBxdWVzdGlvblZhbHVlTGlzdDogQXJyYXkKICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB0aGlzLmZldGNoRGF0YSgpOwogIH0sCiAgbWV0aG9kczogewogICAgZmV0Y2hEYXRhOiBmdW5jdGlvbiBmZXRjaERhdGEoKSB7CiAgICAgIGNvbnNvbGUubG9nKDEyMzQ1LCB0aGlzLnF1ZXN0aW9uVmFsdWVMaXN0KTsKICAgICAgdGhpcy5iYXJIZWlnaHQgPSB0aGlzLnF1ZXN0aW9uVmFsdWVMaXN0Lmxlbmd0aCAqIDMzICsgMTUwICsgJ3B4JzsKICAgICAgdGhpcy5kcmF3QmFyKCk7CiAgICAgIHRoaXMuZHJhd1BpZSgpOyAvLyBpZiAodGhpcy5xdWVzdGlvblR5cGUgPT09IDAgKSB7CiAgICAgIC8vICAgICB0aGlzLiRodHRwLmdldCgiL3F1ZXN0aW9ubmFpcmUvIit0aGlzLnJvdXRlLnBhcmFtcy5xaWQrIi9hbmFseXplIiwgewogICAgICAvLyAgICAgfSkudGhlbigocmVzKSA9PiB7CiAgICAgIC8vICAgICAgICAgY29uc3QgZGF0YSA9IHJlcy5kYXRhLmRhdGE7CiAgICAgIC8vICAgICAgICAgY29uc3QgdGVtcCA9IGRhdGEuaXRlbXM7CiAgICAgIC8vICAgICAgICAgY29uc3QgZGF0YUxpc3QgPSBbXTsKICAgICAgLy8gICAgICAgICBmb3IgKGNvbnN0IHQgaW4gdGVtcCkgewogICAgICAvLyAgICAgICAgICAgICBkYXRhTGlzdC5wdXNoKHsnbmFtZSc6IHQubXlvcHRpb24sICd2YWx1ZSc6IHQuY291bnR9KQogICAgICAvLyAgICAgICAgIH0KICAgICAgLy8gICAgICAgICBkYXRhTGlzdC5zb3J0KChhLCBiKSA9PiB7CiAgICAgIC8vICAgICAgICAgICAgIHJldHVybiBhLnZhbHVlIC0gYi52YWx1ZQogICAgICAvLyAgICAgICAgIH0pOwogICAgICAvLyAgICAgICAgIHRoaXMucXVlc3Rpb25WYWx1ZUxpc3QgPSBkYXRhTGlzdDsKICAgICAgLy8KICAgICAgLy8gICAgIH0pLmNhdGNoKCgpID0+IHsKICAgICAgLy8gICAgICAgICB0aGlzLiRtZXNzYWdlKHttZXNzYWdlOiAiZXJyb3LvvIHor7vlj5blpLHotKXvvIEiLCBkdXJhdGlvbjogMTAwMH0pCiAgICAgIC8vICAgICB9KQogICAgICAvLyAgfQogICAgICAvLyBlbHNlIHsKICAgICAgLy8gICAgIHRoaXMuJGh0dHAuZ2V0KCIvYXBpL2dldFdyaXRlVmFsdWUiLCB7CiAgICAgIC8vICAgICAgICAgcGFyYW1zOiB7CiAgICAgIC8vICAgICAgICAgICAgIHF1ZXN0aW9uSWQ6IHRoaXMucXVlc3Rpb25JZAogICAgICAvLyAgICAgICAgIH0KICAgICAgLy8gICAgIH0pLnRoZW4oKHJlcykgPT4gewogICAgICAvLyAgICAgICAgIHRoaXMud3JpdGVWYWx1ZUxpc3QgPSByZXNbJ2RhdGEnXQogICAgICAvLyAgICAgfSkuY2F0Y2goKCkgPT4gewogICAgICAvLyAgICAgICAgIHRoaXMuJG1lc3NhZ2Uoe21lc3NhZ2U6ICJlcnJvcu+8geivu+WPluWksei0pe+8gSIsIGR1cmF0aW9uOiAxMDAwfSkKICAgICAgLy8gICAgIH0pCiAgICAgIC8vIH0KICAgIH0sCiAgICBkcmF3QmFyOiBmdW5jdGlvbiBkcmF3QmFyKCkgewogICAgICB2YXIgbXlCYXJDaGFydCA9IGVjaGFydHMuaW5pdChkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYmFyQ2hhcnQnICsgdGhpcy5xdWVzdGlvbkluZGV4KSwgJ2xpZ2h0Jyk7CiAgICAgIG15QmFyQ2hhcnQuc2V0T3B0aW9uKHsKICAgICAgICB0b29sdGlwOiB7fSwKICAgICAgICBncmlkOiB7CiAgICAgICAgICBsZWZ0OiAnMTUlJwogICAgICAgIH0sCiAgICAgICAgeEF4aXM6IHt9LAogICAgICAgIHlBeGlzOiB7CiAgICAgICAgICBkYXRhOiB0aGlzLnF1ZXN0aW9uVmFsdWVMaXN0Lm1hcChmdW5jdGlvbiAoeCkgewogICAgICAgICAgICByZXR1cm4geFsnbmFtZSddOwogICAgICAgICAgfSkKICAgICAgICB9LAogICAgICAgIHNlcmllczogW3sKICAgICAgICAgIG5hbWU6ICfpgInmi6nkurrmlbAnLAogICAgICAgICAgdHlwZTogJ2JhcicsCiAgICAgICAgICBkYXRhOiB0aGlzLnF1ZXN0aW9uVmFsdWVMaXN0CiAgICAgICAgfV0KICAgICAgfSk7CiAgICB9LAogICAgZHJhd1BpZTogZnVuY3Rpb24gZHJhd1BpZSgpIHsKICAgICAgdmFyIG15UGllQ2hhcnQgPSBlY2hhcnRzLmluaXQoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3BpZUNoYXJ0JyArIHRoaXMucXVlc3Rpb25JbmRleCksICdsaWdodCcpOwogICAgICBteVBpZUNoYXJ0LnNldE9wdGlvbih7CiAgICAgICAgdG9vbHRpcDoge30sCiAgICAgICAgZ3JpZDogewogICAgICAgICAgbGVmdDogMjAKICAgICAgICB9LAogICAgICAgIHNlcmllczogW3sKICAgICAgICAgIG5hbWU6ICfpgInmi6nkurrmlbAnLAogICAgICAgICAgdHlwZTogJ3BpZScsCiAgICAgICAgICBkYXRhOiB0aGlzLnF1ZXN0aW9uVmFsdWVMaXN0CiAgICAgICAgfV0KICAgICAgfSk7CiAgICB9CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgc2hvd0JhcjogdHJ1ZSwKICAgICAgd3JpdGVWYWx1ZUxpc3Q6IG51bGwsCiAgICAgIC8vIHF1ZXN0aW9uVmFsdWVMaXN0OiBbCiAgICAgIC8vICAgewogICAgICAvLyAgIG5hbWU6IuS8miIsCiAgICAgIC8vICAgdmFsdWU6NTUKICAgICAgLy8gICB9LAogICAgICAvLyAgIHsKICAgICAgLy8gICAgIG5hbWU6IuS4jeS8miIsCiAgICAgIC8vICAgICB2YWx1ZTo1CiAgICAgIC8vICAgfSwKICAgICAgLy8gICB7CiAgICAgIC8vICAgICBuYW1lOiLkvJrkuIDngrkiLAogICAgICAvLyAgICAgdmFsdWU6MzMKICAgICAgLy8gICB9LAogICAgICAvLyAgIHsKICAgICAgLy8gICAgIG5hbWU6IumDveS8miIsCiAgICAgIC8vICAgICB2YWx1ZToxMDAKICAgICAgLy8gICB9CiAgICAgIC8vIF0sCiAgICAgIGJhckhlaWdodDogJzI1MHB4JwogICAgfTsKICB9Cn07"},{"version":3,"sources":["AnalysisCard.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqDA,OAAA,OAAA,MAAA,qBAAA;AACA,OAAA,uBAAA;AACA,OAAA,uBAAA;AACA,OAAA,+BAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,cADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,aAAA,EAAA,MADA;AAEA,IAAA,UAAA,EAAA,MAFA;AAGA,IAAA,aAAA,EAAA,MAHA;AAIA,IAAA,YAAA,EAAA,MAJA;AAKA,IAAA,iBAAA,EAAA;AALA,GAFA;AASA,EAAA,OATA,qBASA;AACA,SAAA,SAAA;AACA,GAXA;AAYA,EAAA,OAAA,EAAA;AACA,IAAA,SADA,uBACA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,KAAA,EAAA,KAAA,iBAAA;AACA,WAAA,SAAA,GAAA,KAAA,iBAAA,CAAA,MAAA,GAAA,EAAA,GAAA,GAAA,GAAA,IAAA;AACA,WAAA,OAAA;AACA,WAAA,OAAA,GAJA,CAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,KArCA;AAsCA,IAAA,OAtCA,qBAsCA;AACA,UAAA,UAAA,GAAA,OAAA,CAAA,IAAA,CAAA,QAAA,CAAA,cAAA,CAAA,aAAA,KAAA,aAAA,CAAA,EAAA,OAAA,CAAA;AACA,MAAA,UAAA,CAAA,SAAA,CAAA;AACA,QAAA,OAAA,EAAA,EADA;AAEA,QAAA,IAAA,EAAA;AAAA,UAAA,IAAA,EAAA;AAAA,SAFA;AAGA,QAAA,KAAA,EAAA,EAHA;AAIA,QAAA,KAAA,EAAA;AACA,UAAA,IAAA,EAAA,KAAA,iBAAA,CAAA,GAAA,CAAA,UAAA,CAAA;AAAA,mBAAA,CAAA,CAAA,MAAA,CAAA;AAAA,WAAA;AADA,SAJA;AAOA,QAAA,MAAA,EAAA,CAAA;AACA,UAAA,IAAA,EAAA,MADA;AAEA,UAAA,IAAA,EAAA,KAFA;AAGA,UAAA,IAAA,EAAA,KAAA;AAHA,SAAA;AAPA,OAAA;AAaA,KArDA;AAsDA,IAAA,OAtDA,qBAsDA;AACA,UAAA,UAAA,GAAA,OAAA,CAAA,IAAA,CAAA,QAAA,CAAA,cAAA,CAAA,aAAA,KAAA,aAAA,CAAA,EAAA,OAAA,CAAA;AACA,MAAA,UAAA,CAAA,SAAA,CAAA;AACA,QAAA,OAAA,EAAA,EADA;AAEA,QAAA,IAAA,EAAA;AAAA,UAAA,IAAA,EAAA;AAAA,SAFA;AAGA,QAAA,MAAA,EAAA,CAAA;AACA,UAAA,IAAA,EAAA,MADA;AAEA,UAAA,IAAA,EAAA,KAFA;AAGA,UAAA,IAAA,EAAA,KAAA;AAHA,SAAA;AAHA,OAAA;AAUA;AAlEA,GAZA;AAiFA,EAAA,IAAA,EAAA,gBAAA;AAEA,WAAA;AACA,MAAA,OAAA,EAAA,IADA;AAEA,MAAA,cAAA,EAAA,IAFA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAA,SAAA,EAAA;AArBA,KAAA;AAuBA;AA1GA,CAAA","sourcesContent":["<template>\n    <div>\n        <el-card class=\"box-card\" shadow=\"hover\">\n            <div class=\"analysis-title\">{{questionIndex}}. {{questionTitle}}</div>\n\n            <el-divider></el-divider>\n\n\n            <div v-if=\"questionType===0\">\n\n                <el-radio-group v-model=\"showBar\" class=\"choose-show\">\n                    <el-radio :label=\"true\">数量</el-radio>\n                    <el-radio :label=\"false\">占比</el-radio>\n                </el-radio-group>\n\n                <el-row>\n                    <el-col :xs=\"24\" :sm=\"18\" :md=\"18\" :lg=\"18\" :xl=\"18\">\n                        <div v-show=\"showBar===true\" :id=\"'barChart'+questionIndex\" class=\"bar-chart\"\n                             :style=\"{height:barHeight}\"></div>\n\n                        <div v-show=\"showBar===false\" :id=\"'pieChart'+questionIndex\" class=\"pie-chart\"></div>\n                    </el-col>\n\n                    <el-col :xs=\"24\" :sm=\"6\" :md=\"6\" :lg=\"6\" :xl=\"6\">\n                        <el-table\n                                :data=\"questionValueList\"\n                                :default-sort=\"{prop:'name',order:'ascending'}\"\n                                class=\"analysis-table\">\n                            <el-table-column\n                                    prop=\"name\"\n                                    label=\"选项\">\n                            </el-table-column>\n                            <el-table-column\n                                    prop=\"value\"\n                                    label=\"人数\">\n                            </el-table-column>\n                            <el-table-column\n                                    prop=\"static_value\"\n                                    label=\"总计\">\n                            </el-table-column>\n                        </el-table>\n                    </el-col>\n\n                </el-row>\n\n            </div>\n\n\n        </el-card>\n    </div>\n</template>\n\n<script>\n    import echarts from \"echarts/lib/echarts\"\n    import \"echarts/lib/chart/bar\"\n    import \"echarts/lib/chart/pie\"\n    import \"echarts/lib/component/tooltip\"\n\n    export default {\n        name: \"AnalysisCard\",\n        props: {\n            questionIndex: Number,\n            questionId: Number,\n            questionTitle: String,\n            questionType: Number,\n            questionValueList: Array\n        },\n        mounted() {\n            this.fetchData();\n        },\n        methods: {\n            fetchData() {\n                console.log(12345,this.questionValueList)\n                this.barHeight = this.questionValueList.length*33+150+'px'\n                this.drawBar();\n                this.drawPie();\n                // if (this.questionType === 0 ) {\n                //     this.$http.get(\"/questionnaire/\"+this.route.params.qid+\"/analyze\", {\n                //     }).then((res) => {\n                //         const data = res.data.data;\n                //         const temp = data.items;\n                //         const dataList = [];\n                //         for (const t in temp) {\n                //             dataList.push({'name': t.myoption, 'value': t.count})\n                //         }\n                //         dataList.sort((a, b) => {\n                //             return a.value - b.value\n                //         });\n                //         this.questionValueList = dataList;\n\n                //\n                //     }).catch(() => {\n                //         this.$message({message: \"error！读取失败！\", duration: 1000})\n                //     })\n                //  }\n                // else {\n                //     this.$http.get(\"/api/getWriteValue\", {\n                //         params: {\n                //             questionId: this.questionId\n                //         }\n                //     }).then((res) => {\n                //         this.writeValueList = res['data']\n                //     }).catch(() => {\n                //         this.$message({message: \"error！读取失败！\", duration: 1000})\n                //     })\n                // }\n\n            },\n            drawBar() {\n                const myBarChart = echarts.init(document.getElementById('barChart' + this.questionIndex), 'light');\n                myBarChart.setOption({\n                    tooltip: {},\n                    grid: {left: '15%'},\n                    xAxis: {},\n                    yAxis: {\n                        data: this.questionValueList.map(x => x['name'])\n                    },\n                    series: [{\n                        name: '选择人数',\n                        type: 'bar',\n                        data: this.questionValueList\n                    }]\n                });\n            },\n            drawPie() {\n                const myPieChart = echarts.init(document.getElementById('pieChart' + this.questionIndex), 'light');\n                myPieChart.setOption({\n                    tooltip: {},\n                    grid: {left: 20},\n                    series: [{\n                        name: '选择人数',\n                        type: 'pie',\n                        data: this.questionValueList\n                    }]\n                });\n\n            }\n        },\n\n        data: function () {\n\n            return {\n                showBar: true,\n                writeValueList: null,\n                // questionValueList: [\n                //   {\n                //   name:\"会\",\n                //   value:55\n                //   },\n                //   {\n                //     name:\"不会\",\n                //     value:5\n                //   },\n                //   {\n                //     name:\"会一点\",\n                //     value:33\n                //   },\n                //   {\n                //     name:\"都会\",\n                //     value:100\n                //   }\n                // ],\n                barHeight: '250px'\n            }\n        }\n    }\n</script>\n\n<style scoped>\n    .bar-chart {\n        width: 100%;\n    }\n\n    .pie-chart {\n        margin-left: calc(25% - 100px);\n        width: 400px;\n        height: 300px;\n    }\n\n    .box-card {\n        transition: all ease 300ms;\n        text-align: left;\n    }\n\n    .analysis-table {\n    }\n\n    .choose-show {\n        margin-left: 80px;\n    }\n\n    .analysis-title {\n        margin: 15px;\n        font-size: 14px;\n    }\n</style>\n"],"sourceRoot":"src/components/Analysis"}]}