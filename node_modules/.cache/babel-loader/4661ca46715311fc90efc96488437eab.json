{"remainingRequest":"F:\\github\\guetsurveystar\\node_modules\\babel-loader\\lib\\index.js!F:\\github\\guetsurveystar\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\github\\guetsurveystar\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\github\\guetsurveystar\\src\\components\\questionnaire\\MainQuestionList.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\github\\guetsurveystar\\src\\components\\questionnaire\\MainQuestionList.vue","mtime":1592629707029},{"path":"F:\\github\\guetsurveystar\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\github\\guetsurveystar\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"F:\\github\\guetsurveystar\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\github\\guetsurveystar\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc3BsaWNlIjsKaW1wb3J0IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyIGZyb20gIkY6L2dpdGh1Yi9ndWV0c3VydmV5c3Rhci9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlciI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBRdWVzdGlvbiBmcm9tICIuL1F1ZXN0aW9uIjsKaW1wb3J0IENsaXBib2FyZCBmcm9tICdjbGlwYm9hcmQnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIk1haW5RdWVzdGlvbkxpc3QiLAogIGNvbXBvbmVudHM6IHsKICAgIFF1ZXN0aW9uOiBRdWVzdGlvbgogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHF1ZXN0aW9uTGlzdDogW10sCiAgICAgIHF1ZXN0aW9ubmFpcmU6IHsKICAgICAgICBpc0JveFNlbGVjdGVkOiBmYWxzZSwKICAgICAgICBsZXNzb25ObzogIiIsCiAgICAgICAgcXVlc3Rpb25uYWlyZVRpdGxlOiAi6K+36L6T5YWl5qCH6aKYIiwKICAgICAgICBzdGFydFRpbWU6ICIiLAogICAgICAgIGVuZFRpbWU6ICIiLAogICAgICAgIHRpbWU6IFtuZXcgRGF0ZSgpLCBuZXcgRGF0ZSgpXSwKICAgICAgICBteWxlc3NvbnM6IFtdCiAgICAgIH0sCiAgICAgIGRlbGV0ZVZpc2libGU6IGZhbHNlLAogICAgICBkZWxldGVkOiBmYWxzZSwKICAgICAgcmVsZWFzZVZpc2libGU6IGZhbHNlLAogICAgICBoYWNrUmVzZXQ6IHRydWUsCiAgICAgIGNvdXJzZUdvYWxzOiBbXQogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGZldGNoRGF0YTogZnVuY3Rpb24gZmV0Y2hEYXRhKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgdGhpcy4kaHR0cC5nZXQoIi9jb3Vyc2UvbXlsZXNzb24iLCB7fSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgdmFyIGxlc3NvbnMgPSByZXMuZGF0YS5kYXRhLmxlc3NvbnM7CgogICAgICAgIHZhciBfaXRlcmF0b3IgPSBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlcihsZXNzb25zKSwKICAgICAgICAgICAgX3N0ZXA7CgogICAgICAgIHRyeSB7CiAgICAgICAgICBmb3IgKF9pdGVyYXRvci5zKCk7ICEoX3N0ZXAgPSBfaXRlcmF0b3IubigpKS5kb25lOykgewogICAgICAgICAgICB2YXIgdCA9IF9zdGVwLnZhbHVlOwoKICAgICAgICAgICAgX3RoaXMucXVlc3Rpb25uYWlyZS5teWxlc3NvbnMucHVzaCh0KTsKICAgICAgICAgIH0KICAgICAgICB9IGNhdGNoIChlcnIpIHsKICAgICAgICAgIF9pdGVyYXRvci5lKGVycik7CiAgICAgICAgfSBmaW5hbGx5IHsKICAgICAgICAgIF9pdGVyYXRvci5mKCk7CiAgICAgICAgfQoKICAgICAgICBjb25zb2xlLmxvZyhfdGhpcy5xdWVzdGlvbm5haXJlLm15bGVzc29ucyk7CiAgICAgIH0pOyAvLyB0aGlzLiRodHRwLmdldCgiL3F1ZXN0aW9ubmFpcmUvZ2V0UXVlc3Rpb25MaXN0IiwgewogICAgICAvLyAgICAgICAgIHF1ZXN0aW9ubmFpcmVJZDogdGhpcy4kcm91dGUucGFyYW1zLnFpZAogICAgICAvLyB9KS50aGVuKChyZXMpID0+IHsKICAgICAgLy8gICAgIGNvbnN0IHRlbXBMaXN0ID0gcmVzLmRhdGFbJ3F1ZXN0aW9uTGlzdCddOwogICAgICAvLyAgICAgY29uc3QgcmVzTGlzdCA9IFtdOwogICAgICAvLyAgICAgZm9yIChjb25zdCB0IG9mIHRlbXBMaXN0KSB7CiAgICAgIC8vICAgICAgICAgcmVzTGlzdC5wdXNoKHQpOwogICAgICAvLyAgICAgfQogICAgICAvLyAgICAgdGhpcy5xdWVzdGlvbkxpc3QgPSByZXNMaXN0OwogICAgICAvLyAgICAgdGhpcy4kbWVzc2FnZSh7bWVzc2FnZTogIumXruWNt+W3suivu+WPliIsIGR1cmF0aW9uOiAxMDAwfSk7CiAgICAgIC8vICAgICB0aGlzLnJlbG9hZCgpOwogICAgICAvLyB9KS5jYXRjaCgoKSA9PiB7CiAgICAgIC8vICAgICB0aGlzLiRtZXNzYWdlKHttZXNzYWdlOiAiZXJyb3LvvIHpl67ljbfor7vlj5blpLHotKXvvIEiLCBkdXJhdGlvbjogMTAwMH0pOwogICAgICAvLyB9KQogICAgICAvLwogICAgICAvLyB0aGlzLiRodHRwLmdldCgiL3F1ZXN0aW9ubmFpcmUvZ2V0UXVlc3Rpb25uYWlyZU91dGxpbmUiLCB7CiAgICAgIC8vICAgICAgICAgcXVlc3Rpb25uYWlyZUlkOiB0aGlzLiRyb3V0ZS5wYXJhbXMucWlkCiAgICAgIC8vIH0pLnRoZW4oKHJlcykgPT4gewogICAgICAvLyAgICAgY29uc3QgdGVtcCA9IHsKICAgICAgLy8gICAgICAgICBpc0JveFNlbGVjdGVkOiBmYWxzZSwKICAgICAgLy8gICAgICAgICBxdWVzdGlvbm5haXJlVGl0bGU6IHJlcy5kYXRhWydxdWVzdGlvbm5haXJlJ11bJ3RpdGxlJ10sCiAgICAgIC8vICAgICAgICAgcXVlc3Rpb25uYWlyZUlkOiByZXMuZGF0YVsncXVlc3Rpb25uYWlyZSddWydxdWVzdGlvbm5haXJlSWQnXSwKICAgICAgLy8gICAgIH07CiAgICAgIC8vICAgICB0aGlzLnF1ZXN0aW9ubmFpcmUgPSB0ZW1wOwogICAgICAvLyB9KS5jYXRjaCgoKSA9PiB7CiAgICAgIC8vICAgICB0aGlzLiRtZXNzYWdlKHttZXNzYWdlOiAiZXJyb3LvvIHpl67ljbfmpoLlhrXor7vlj5blpLHotKXvvIEiLCBkdXJhdGlvbjogMTAwMH0pCiAgICAgIC8vIH0pCiAgICB9LAogICAgc2VsZWN0T25lQm94OiBmdW5jdGlvbiBzZWxlY3RPbmVCb3goaW5kZXgpIHsKICAgICAgdGhpcy5xdWVzdGlvbkxpc3RbaW5kZXhdLmlzQm94U2VsZWN0ZWQgPSAhdGhpcy5xdWVzdGlvbkxpc3RbaW5kZXhdLmlzQm94U2VsZWN0ZWQ7CiAgICB9LAogICAgcmVzZXRRdWVzdGlvbjogZnVuY3Rpb24gcmVzZXRRdWVzdGlvbihpbmRleCkgewogICAgICByZXR1cm47IC8vIHByb2Nlc3MgaW4gdGhlIHF1ZXN0aW9uLnZ1ZQogICAgfSwKICAgIHNhdmVPbmVRdWVzdGlvbjogZnVuY3Rpb24gc2F2ZU9uZVF1ZXN0aW9uKGRhdGEpIHsKICAgICAgdmFyIGluZGV4ID0gZGF0YVsncXVlc3Rpb25JbmRleCddOwogICAgICB2YXIgb25lUXVlc3Rpb24gPSB7CiAgICAgICAgcXVlc3Rpb25JbmRleDogaW5kZXgsCiAgICAgICAgaXNCb3hTZWxlY3RlZDogdHJ1ZSwKICAgICAgICBxdWVzdGlvblRpdGxlOiBkYXRhWydxdWVzdGlvblRpdGxlJ10sCiAgICAgICAgcXVlc3Rpb25OdWxsYWJsZTogZGF0YVsncXVlc3Rpb25OdWxsYWJsZSddLAogICAgICAgIHF1ZXN0aW9uVHlwZTogZGF0YVsncXVlc3Rpb25UeXBlJ10sCiAgICAgICAgcXVlc3Rpb25PcHRpb25zOiBkYXRhWydxdWVzdGlvbk9wdGlvbnMnXSwKICAgICAgICBjb3Vyc2VHb2FsOiBkYXRhWydjb3Vyc2VHb2FsJ10KICAgICAgfTsKICAgICAgdGhpcy5xdWVzdGlvbkxpc3Quc3BsaWNlKGluZGV4LCAxLCBvbmVRdWVzdGlvbik7IC8v5pWw5o2u6K+35rGC6YOo5YiGCiAgICAgIC8vIHRoaXMuJGh0dHAucG9zdCgiL3F1ZXN0aW9ubmFpcmUvc2F2ZU9uZVF1ZXN0aW9uP3F1ZXN0aW9ubmFpcmVJZD0iICsgdGhpcy4kcm91dGUucGFyYW1zLnFpZCwgewogICAgICAvLyAgICAgcXVlc3Rpb246IG9uZVF1ZXN0aW9uLAogICAgICAvLyB9KS50aGVuKCgpID0+IHsKICAgICAgLy8gICAgIHRoaXMuJG1lc3NhZ2Uoe21lc3NhZ2U6ICLpl67ljbflt7Lkv53lrZgiLCBkdXJhdGlvbjogMTAwMH0pOwogICAgICAvLyB9KS5jYXRjaCgoKSA9PiB7CiAgICAgIC8vICAgICB0aGlzLiRtZXNzYWdlKHttZXNzYWdlOiAiZXJyb3LvvIHpl67ljbfmnKrkv53lrZjvvIEiLCBkdXJhdGlvbjogMTAwMH0pOwogICAgICAvLyB9KTsKICAgIH0sCiAgICBkZWxldGVPbmVCb3g6IGZ1bmN0aW9uIGRlbGV0ZU9uZUJveChpbmRleCkgewogICAgICBjb25zb2xlLmxvZyh0aGlzLnF1ZXN0aW9uTGlzdC5zcGxpY2UoaW5kZXgsIDEpKTsKCiAgICAgIGZvciAodmFyIGkgPSBpbmRleDsgaSA8IHRoaXMucXVlc3Rpb25MaXN0Lmxlbmd0aDsgaSsrKSB7CiAgICAgICAgdGhpcy5xdWVzdGlvbkxpc3RbaV0ucXVlc3Rpb25JbmRleC0tOwogICAgICB9CgogICAgICB0aGlzLnJlbG9hZCgpOwogICAgfSwKICAgIGFkZE5ld1F1ZXN0aW9uOiBmdW5jdGlvbiBhZGROZXdRdWVzdGlvbih0eXBlKSB7CiAgICAgIHZhciBuZXdRdWVzdGlvbiA9IHsKICAgICAgICBxdWVzdGlvbkluZGV4OiB0aGlzLnF1ZXN0aW9uTGlzdC5sZW5ndGgsCiAgICAgICAgaXNCb3hTZWxlY3RlZDogdHJ1ZSwKICAgICAgICBxdWVzdGlvblRpdGxlOiAiIiwKICAgICAgICBxdWVzdGlvbk51bGxhYmxlOiBmYWxzZSwKICAgICAgICBxdWVzdGlvblR5cGU6IHR5cGUsCiAgICAgICAgcXVlc3Rpb25PcHRpb25zOiBbewogICAgICAgICAgIm15b3B0aW9uIjogJycsCiAgICAgICAgICAic2NvcmUiOiAwCiAgICAgICAgfV0sCiAgICAgICAgY291cnNlR29hbDogMAogICAgICB9OwogICAgICB0aGlzLnF1ZXN0aW9uTGlzdC5wdXNoKG5ld1F1ZXN0aW9uKTsKICAgIH0sCiAgICBzYXZlUXVlc3Rpb25uYWlyZVRpdGxlOiBmdW5jdGlvbiBzYXZlUXVlc3Rpb25uYWlyZVRpdGxlKCkgewogICAgICB0aGlzLnF1ZXN0aW9ubmFpcmUuaXNCb3hTZWxlY3RlZCA9IGZhbHNlOyAvLyB0aGlzLiRodHRwLnBvc3QoIi9xdWVzdGlvbm5haXJlL3NhdmVRdWVzdGlvbm5haXJlT3V0bGluZSIsIHsKICAgICAgLy8gICAgIHF1ZXN0aW9ubmFpcmU6IHRoaXMucXVlc3Rpb25uYWlyZSwKICAgICAgLy8gfSkudGhlbigoKSA9PiB7CiAgICAgIC8vICAgICB0aGlzLiRtZXNzYWdlKHttZXNzYWdlOiAi6Zeu5Y235bey5L+d5a2YIiwgZHVyYXRpb246IDEwMDB9KTsKICAgICAgLy8gfSkuY2F0Y2goKCkgPT4gewogICAgICAvLyAgICAgdGhpcy4kbWVzc2FnZSh7bWVzc2FnZTogImVycm9y77yB6Zeu5Y235pyq5L+d5a2Y77yBIiwgZHVyYXRpb246IDEwMDB9KTsKICAgICAgLy8gfSk7CiAgICB9LAogICAgcmVzZXRRdWVzdGlvbm5haXJlVGl0bGU6IGZ1bmN0aW9uIHJlc2V0UXVlc3Rpb25uYWlyZVRpdGxlKCkgewogICAgICB0aGlzLnF1ZXN0aW9ubmFpcmUgPSB7CiAgICAgICAgaXNCb3hTZWxlY3RlZDogZmFsc2UsCiAgICAgICAgcXVlc3Rpb25uYWlyZVRpdGxlOiAi6K+36L6T5YWl5qCH6aKYIiwKICAgICAgICBxdWVzdGlvbm5haXJlSWQ6IHRoaXMuJHJvdXRlLnBhcmFtcy5xaWQKICAgICAgfTsKICAgIH0sCiAgICBlZGl0VGl0bGU6IGZ1bmN0aW9uIGVkaXRUaXRsZSgpIHsKICAgICAgdGhpcy5xdWVzdGlvbm5haXJlLmlzQm94U2VsZWN0ZWQgPSB0cnVlOwogICAgfSwKICAgIHNhdmVRdWVzdGlvbm5haXJlOiBmdW5jdGlvbiBzYXZlUXVlc3Rpb25uYWlyZSgpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICB0aGlzLiRodHRwLnBvc3QoIi9xdWVzdGlvbm5haXJlL2VkaXQiLCB7CiAgICAgICAgcXVlc3Rpb25uYWlyZTogewogICAgICAgICAgcXVlc3Rpb25uYWlyZUlkOiBwYXJzZUludCh0aGlzLiRyb3V0ZS5wYXJhbXMucWlkKSwKICAgICAgICAgIGxlc3Nvbk5vOiB0aGlzLnF1ZXN0aW9ubmFpcmUubGVzc29uTm8sCiAgICAgICAgICBzdGFydFRpbWU6IHRoaXMucXVlc3Rpb25uYWlyZS50aW1lWzBdLmdldFRpbWUoKSwKICAgICAgICAgIGVuZFRpbWU6IHRoaXMucXVlc3Rpb25uYWlyZS50aW1lWzFdLmdldFRpbWUoKQogICAgICAgIH0sCiAgICAgICAgcXVlc3Rpb25MaXN0OiB0aGlzLnF1ZXN0aW9uTGlzdAogICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICB2YXIgZGF0YSA9IHJlcy5kYXRhOwoKICAgICAgICBpZiAoZGF0YS5jb2RlID09PSAwKSB7CiAgICAgICAgICBfdGhpczIuJG1lc3NhZ2UoewogICAgICAgICAgICBtZXNzYWdlOiAi6Zeu5Y235bey5L+d5a2YIiwKICAgICAgICAgICAgZHVyYXRpb246IDEwMDAKICAgICAgICAgIH0pOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBfdGhpczIuJG1lc3NhZ2UoewogICAgICAgICAgICBtZXNzYWdlOiAiZXJyb3LvvIHpl67ljbfmnKrkv53lrZjvvIEiLAogICAgICAgICAgICBkdXJhdGlvbjogMTAwMAogICAgICAgICAgfSk7CiAgICAgICAgfQogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoKSB7CiAgICAgICAgX3RoaXMyLiRtZXNzYWdlKHsKICAgICAgICAgIG1lc3NhZ2U6ICJlcnJvcu+8gemXruWNt+acquS/neWtmO+8gSIsCiAgICAgICAgICBkdXJhdGlvbjogMTAwMAogICAgICAgIH0pOwogICAgICB9KTsKICAgICAgdGhpcy4kcm91dGVyLmJhY2soKTsKICAgIH0sCiAgICBkZWxldGVRdWVzdGlvbm5haXJlOiBmdW5jdGlvbiBkZWxldGVRdWVzdGlvbm5haXJlKCkgewogICAgICB2YXIgX3RoaXMzID0gdGhpczsKCiAgICAgIHRoaXMuZGVsZXRlVmlzaWJsZSA9IGZhbHNlOwogICAgICB0aGlzLiRodHRwLmdldCgnL3F1ZXN0aW9ubmFpcmUvZGVsZXRlUXVlc3Rpb25uYWlyZScsIHsKICAgICAgICBxdWVzdGlvbm5haXJlSWQ6IHRoaXMucXVlc3Rpb25uYWlyZS5xdWVzdGlvbm5haXJlSWQKICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICBjb25zb2xlLmxvZyhyZXNwb25zZSk7CgogICAgICAgIF90aGlzMy4kcm91dGVyLmJhY2soKTsKCiAgICAgICAgX3RoaXMzLmRlbGV0ZWQgPSB0cnVlOwoKICAgICAgICBfdGhpczMuJG1lc3NhZ2UoewogICAgICAgICAgbWVzc2FnZTogIumXruWNt+W3suWIoOmZpCIsCiAgICAgICAgICBkdXJhdGlvbjogMTAwMAogICAgICAgIH0pOwogICAgICB9KTsKICAgIH0sCiAgICByZWxlYXNlUXVlc3Rpb25uYWlyZTogZnVuY3Rpb24gcmVsZWFzZVF1ZXN0aW9ubmFpcmUoKSB7CiAgICAgIHZhciBfdGhpczQgPSB0aGlzOwoKICAgICAgdGhpcy4kaHR0cC5wb3N0KCIvcXVlc3Rpb25uYWlyZS9yZWxlYXNlUXVlc3Rpb25uYWlyZSIsIHsKICAgICAgICBxdWVzdGlvbkxpc3Q6IHRoaXMucXVlc3Rpb25MaXN0LAogICAgICAgIHF1ZXN0aW9ubmFpcmU6IHRoaXMucXVlc3Rpb25uYWlyZQogICAgICB9KS50aGVuKGZ1bmN0aW9uICgpIHsKICAgICAgICBfdGhpczQuJG1lc3NhZ2UoewogICAgICAgICAgbWVzc2FnZTogIumXruWNt+W3suWPkeW4gyIsCiAgICAgICAgICBkdXJhdGlvbjogMTAwMAogICAgICAgIH0pOwogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoKSB7CiAgICAgICAgX3RoaXM0LiRtZXNzYWdlKHsKICAgICAgICAgIG1lc3NhZ2U6ICJlcnJvcu+8gemXruWNt+acquWPkeW4g++8gSIsCiAgICAgICAgICBkdXJhdGlvbjogMTAwMAogICAgICAgIH0pOwogICAgICB9KTsKICAgICAgdGhpcy5yZWxlYXNlVmlzaWJsZSA9IHRydWU7CiAgICB9LAogICAgcmVsZWFzZUVuZDogZnVuY3Rpb24gcmVsZWFzZUVuZCgpIHsKICAgICAgdGhpcy5yZWxlYXNlVmlzaWJsZSA9IGZhbHNlOwogICAgICB0aGlzLiRyb3V0ZXIuYmFjaygpOwogICAgfSwKICAgIHJlbG9hZDogZnVuY3Rpb24gcmVsb2FkKCkgewogICAgICB2YXIgX3RoaXM1ID0gdGhpczsKCiAgICAgIHRoaXMuaGFja1Jlc2V0ID0gZmFsc2U7CiAgICAgIHRoaXMuJG5leHRUaWNrKGZ1bmN0aW9uICgpIHsKICAgICAgICBfdGhpczUuaGFja1Jlc2V0ID0gdHJ1ZTsKICAgICAgfSk7CiAgICB9LAogICAgY29weTogZnVuY3Rpb24gY29weSgpIHsKICAgICAgdmFyIF90aGlzNiA9IHRoaXM7CgogICAgICB2YXIgY2xpcGJvYXJkID0gbmV3IENsaXBib2FyZCgnLmNvcHktbGluaycpOwogICAgICBjbGlwYm9hcmQub24oJ3N1Y2Nlc3MnLCBmdW5jdGlvbiAoZSkgewogICAgICAgIGNvbnNvbGUubG9nKCflpI3liLbmiJDlip8nKTsKCiAgICAgICAgX3RoaXM2LiRtZXNzYWdlKHsKICAgICAgICAgIG1lc3NhZ2U6ICLlpI3liLbmiJDlip8iLAogICAgICAgICAgZHVyYXRpb246IDEwMDAKICAgICAgICB9KTsgLy8g6YeK5pS+5YaF5a2YCgoKICAgICAgICBjbGlwYm9hcmQuZGVzdHJveSgpOwogICAgICB9KTsKICAgICAgY2xpcGJvYXJkLm9uKCdlcnJvcicsIGZ1bmN0aW9uIChlKSB7CiAgICAgICAgLy8g5LiN5pSv5oyB5aSN5Yi2CiAgICAgICAgY29uc29sZS5sb2coJ+ivpea1j+iniOWZqOS4jeaUr+aMgeiHquWKqOWkjeWIticpOyAvLyDph4rmlL7lhoXlrZgKCiAgICAgICAgY2xpcGJvYXJkLmRlc3Ryb3koKTsKICAgICAgfSk7CiAgICB9LAogICAgZmV0Y2hteWxlc3NvbjogZnVuY3Rpb24gZmV0Y2hteWxlc3NvbigpIHsKICAgICAgdmFyIF90aGlzNyA9IHRoaXM7CgogICAgICB2YXIgY291cnNlTm8gPSAnJzsKCiAgICAgIHZhciBfaXRlcmF0b3IyID0gX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIodGhpcy5teWxlc3NvbnMpLAogICAgICAgICAgX3N0ZXAyOwoKICAgICAgdHJ5IHsKICAgICAgICBmb3IgKF9pdGVyYXRvcjIucygpOyAhKF9zdGVwMiA9IF9pdGVyYXRvcjIubigpKS5kb25lOykgewogICAgICAgICAgdmFyIHQgPSBfc3RlcDIudmFsdWU7CgogICAgICAgICAgaWYgKHQubGVzc29uX2NvZGUgPT09IHRoaXMucXVlc3Rpb25uYWlyZS5sZXNzb25ObykgewogICAgICAgICAgICBjb3Vyc2VObyA9IHQuY291cnNlX2NvZGU7CiAgICAgICAgICB9CgogICAgICAgICAgdGhpcy4kaHR0cC5nZXQoImNvdXJzZS90YXJnZXQvIiArIGNvdXJzZU5vLCB7fSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgICAgIHZhciB0YXJnZXRMaXN0ID0gcmVzLmRhdGEuZGF0YS50YXJnZXRzOwogICAgICAgICAgICB2YXIgcmVzTGlzdCA9IFtdOwoKICAgICAgICAgICAgdmFyIF9pdGVyYXRvcjMgPSBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlcih0YXJnZXRMaXN0KSwKICAgICAgICAgICAgICAgIF9zdGVwMzsKCiAgICAgICAgICAgIHRyeSB7CiAgICAgICAgICAgICAgZm9yIChfaXRlcmF0b3IzLnMoKTsgIShfc3RlcDMgPSBfaXRlcmF0b3IzLm4oKSkuZG9uZTspIHsKICAgICAgICAgICAgICAgIHZhciBfdCA9IF9zdGVwMy52YWx1ZTsKICAgICAgICAgICAgICAgIHJlc0xpc3QucHVzaChfdCk7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9IGNhdGNoIChlcnIpIHsKICAgICAgICAgICAgICBfaXRlcmF0b3IzLmUoZXJyKTsKICAgICAgICAgICAgfSBmaW5hbGx5IHsKICAgICAgICAgICAgICBfaXRlcmF0b3IzLmYoKTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgX3RoaXM3LmNvdXJzZUdvYWxzID0gcmVzTGlzdDsKICAgICAgICAgIH0pOwogICAgICAgICAgY29uc29sZS5sb2codGhpcy5jb3Vyc2VHb2Fscyk7CiAgICAgICAgICB0aGlzLnJlbG9hZCgpOwogICAgICAgIH0KICAgICAgfSBjYXRjaCAoZXJyKSB7CiAgICAgICAgX2l0ZXJhdG9yMi5lKGVycik7CiAgICAgIH0gZmluYWxseSB7CiAgICAgICAgX2l0ZXJhdG9yMi5mKCk7CiAgICAgIH0KICAgIH0KICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB0aGlzLnF1ZXN0aW9ubmFpcmUucXVlc3Rpb25uYWlyZVRpdGxlID0gdGhpcy4kcm91dGUucGFyYW1zLnRpdGxlOwogICAgY29uc29sZS5sb2codGhpcy4kcm91dGUucGFyYW1zLnFpZCk7CgogICAgaWYgKG51bGwgIT0gdGhpcy4kcm91dGUucGFyYW1zLnFpZCkgewogICAgICB0aGlzLmZldGNoRGF0YSgpOwogICAgfQogIH0KfTs="},{"version":3,"sources":["MainQuestionList.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div>\n        <div class=\"main-question-list\">\n            <div style=\"padding: 0; display: inline\">\n                <el-card style=\"position: relative; text-align: center\">\n                    <div class=\"box-is-not-selected-wrapper\" @click=\"editTitle\">\n                        <div v-if=\"questionnaire.isBoxSelected===false\" class=\"box-is-not-selected\">\n                            <h1>{{questionnaire.questionnaireTitle}}</h1>\n                            <h3>{{questionnaire.lessonNo}}</h3>\n                            <h3>开始时间：{{questionnaire.time[0].toLocaleDateString()+' '+questionnaire.time[0].toLocaleTimeString()}}</h3>\n                            <h3>结束时间：{{questionnaire.time[1].toLocaleDateString()+' '+questionnaire.time[1].toLocaleTimeString()}}</h3>\n                        </div>\n\n                        <div class=\"edit-icon\"><i class=\"el-icon-edit-outline\"></i></div>\n                    </div>\n                    <div v-if=\"questionnaire.isBoxSelected===true\">\n                        <el-form>\n                            <el-form-item>\n                                标题：\n                                <el-input\n                                        type=\"text\" style=\"max-width: 20%\"\n                                        placeholder=\"请输入问卷标题\"\n                                        v-model=\"questionnaire.questionnaireTitle\"\n                                ></el-input>\n                            </el-form-item>\n                            <el-form-item>\n                                课号：\n                                <el-select v-model=\"questionnaire.lessonNo\" placeholder=\"请选择\" style=\"width: 20%\">\n                                    <el-option\n                                            v-for=\"(item,index) in this.questionnaire.mylessons\"\n                                            :key=\"index\"\n                                            :label=\"item.lesson_code + '-' + item.course_name\"\n                                            :value=\"item.lesson_code\"\n                                    @change=\"fetchmylesson\">\n                                    </el-option>\n                                </el-select>\n                            </el-form-item>\n                            <el-form-item>\n                                时间：\n                                <el-date-picker\n                                        v-model=\"questionnaire.time\"\n                                        type=\"datetimerange\"\n                                        range-separator=\"至\"\n                                        start-placeholder=\"开始日期\"\n                                        end-placeholder=\"结束日期\">\n                                </el-date-picker>\n                            </el-form-item>\n\n\n                            <el-form-item>\n                                <el-button type=\"primary\" @click=\"saveQuestionnaireTitle\">保存</el-button>\n                                <el-button @click=\"resetQuestionnaireTitle\">重置</el-button>\n                            </el-form-item>\n                        </el-form>\n                    </div>\n                </el-card>\n            </div>\n            <div style=\"height: 10px\"></div>\n\n\n            <Question v-if=\"hackReset\" v-for=\"(item,index) in questionList\"\n                      :key=\"index\"\n                      :is-box-selected=\"item.isBoxSelected\"\n                      :question-index=\"index\"\n                      :question-title=\"item.questionTitle\"\n                      :question-nullable=\"item.questionNullable\"\n                      :question-type=\"item.questionType\"\n                      :question-options=\"item.questionOptions\"\n                      :course-goals=\"courseGoals\"\n                      :course-goal=\"item.courseGoal\"\n                      @clickUnSelected=\"selectOneBox(index)\"\n                      @clickSelected=\"selectOneBox(index)\"\n                      @saveOneQuestion=\"saveOneQuestion\"\n                      @resetQuestion=\"resetQuestion(index)\"\n                      @clickDelete=\"deleteOneBox(index)\"\n            ></Question>\n            <el-card class=\"add-question\" :body-style=\"{ padding: '10px' }\" shadow=\"hover\">\n                <div class=\"add-question-inner\" @click=\"addNewQuestion(0)\"><i class=\"el-icon-plus\"></i>\n                    添加问题\n                </div>\n            </el-card>\n            <el-card style=\"text-align: center\">\n\n                <el-dialog\n                        title=\"确认删除？\"\n                        :visible.sync=\"deleteVisible\"\n                        append-to-body\n                        center\n                >\n                <span slot=\"footer\" class=\"dialog-footer\">\n                    <el-button @click=\"deleteVisible=false\" size=\"small\">取 消</el-button>\n                    <el-button @click=\"deleteQuestionnaire\" type=\"danger\" size=\"small\">确认删除</el-button>\n                </span>\n\n                </el-dialog>\n                <el-dialog\n                        title=\"发布成功\"\n                        :visible.sync=\"releaseVisible\"\n                        append-to-body\n                        center\n                >\n                    问卷链接为：\n                    <el-link class=\"copy-link\"\n                             target=\"_blank\" @click=\"copy\"\n                             :data-clipboard-text=\"'/fillin/'+this.$route.params.qid\"\n                             data-clipboard-action=\"copy\"\n                             type=\"primary\"\n                    >\n                        {{this.questionnaire.questionnaireTitle}}-点击复制\n                    </el-link>\n                    <span slot=\"footer\" class=\"dialog-footer\">\n                    <el-button @click=\"releaseEnd\" type=\"primary\">关 闭</el-button>\n                </span>\n\n                </el-dialog>\n\n                <el-button type=\"danger\" @click=\"deleteVisible = true\">删 除</el-button>\n                <el-button @click=\"saveQuestionnaire\">保 存</el-button>\n                <el-button @click=\"releaseQuestionnaire\" type=\"primary\">发 布</el-button>\n            </el-card>\n\n\n        </div>\n    </div>\n</template>\n\n<script>\n    import Question from \"./Question\";\n    import Clipboard from 'clipboard';\n\n    export default {\n        name: \"MainQuestionList\",\n        components: {Question},\n\n        data: function () {\n            return {\n                questionList: [],\n                questionnaire: {\n                    isBoxSelected: false,\n                    lessonNo: \"\",\n                    questionnaireTitle: \"请输入标题\",\n                    startTime:\"\",\n                    endTime:\"\",\n                    time:[new Date(),new Date()],\n                    mylessons:[]\n                },\n                deleteVisible: false,\n                deleted: false,\n                releaseVisible: false,\n                hackReset:true,\n                courseGoals: []\n            }\n        },\n\n        methods: {\n            fetchData() {\n                this.$http.get(\"/course/mylesson\", {}).then((res) => {\n                    const lessons = res.data.data.lessons\n                    for (const t of lessons) {\n                        this.questionnaire.mylessons.push(t)\n                    }\n                    console.log(this.questionnaire.mylessons)\n                })\n                // this.$http.get(\"/questionnaire/getQuestionList\", {\n                //         questionnaireId: this.$route.params.qid\n                // }).then((res) => {\n                //     const tempList = res.data['questionList'];\n                //     const resList = [];\n                //     for (const t of tempList) {\n                //         resList.push(t);\n                //     }\n                //     this.questionList = resList;\n                //     this.$message({message: \"问卷已读取\", duration: 1000});\n                //     this.reload();\n                // }).catch(() => {\n                //     this.$message({message: \"error！问卷读取失败！\", duration: 1000});\n                // })\n                //\n                // this.$http.get(\"/questionnaire/getQuestionnaireOutline\", {\n                //         questionnaireId: this.$route.params.qid\n                // }).then((res) => {\n                //     const temp = {\n                //         isBoxSelected: false,\n                //         questionnaireTitle: res.data['questionnaire']['title'],\n                //         questionnaireId: res.data['questionnaire']['questionnaireId'],\n                //     };\n                //     this.questionnaire = temp;\n                // }).catch(() => {\n                //     this.$message({message: \"error！问卷概况读取失败！\", duration: 1000})\n                // })\n\n            },\n\n\n            selectOneBox(index) {\n                this.questionList[index].isBoxSelected = !this.questionList[index].isBoxSelected;\n            },\n\n            resetQuestion(index) {\n                return;  // process in the question.vue\n            },\n\n            saveOneQuestion(data) {\n                const index = data['questionIndex'];\n                const oneQuestion = {\n                    questionIndex: index,\n                    isBoxSelected: true,\n                    questionTitle: data['questionTitle'],\n                    questionNullable: data['questionNullable'],\n                    questionType: data['questionType'],\n                    questionOptions: data['questionOptions'],\n                    courseGoal: data['courseGoal']\n                };\n                this.questionList.splice(index, 1, oneQuestion);\n                //数据请求部分\n                // this.$http.post(\"/questionnaire/saveOneQuestion?questionnaireId=\" + this.$route.params.qid, {\n                //     question: oneQuestion,\n                // }).then(() => {\n                //     this.$message({message: \"问卷已保存\", duration: 1000});\n                // }).catch(() => {\n                //     this.$message({message: \"error！问卷未保存！\", duration: 1000});\n                // });\n            },\n\n            deleteOneBox(index) {\n                console.log(this.questionList.splice(index, 1))\n                for (let i = index; i < this.questionList.length; i++) {\n                    this.questionList[i].questionIndex--;\n                }\n                this.reload()\n            },\n            addNewQuestion(type) {\n                const newQuestion = {\n                    questionIndex: this.questionList.length,\n                    isBoxSelected: true,\n                    questionTitle: \"\",\n                    questionNullable: false,\n                    questionType: type,\n                    questionOptions: [\n                        {\n                            \"myoption\": '',\n                            \"score\": 0\n                        }],\n                    courseGoal: 0\n                };\n                this.questionList.push(newQuestion);\n            },\n            saveQuestionnaireTitle() {\n                this.questionnaire.isBoxSelected = false;\n                // this.$http.post(\"/questionnaire/saveQuestionnaireOutline\", {\n                //     questionnaire: this.questionnaire,\n                // }).then(() => {\n                //     this.$message({message: \"问卷已保存\", duration: 1000});\n                // }).catch(() => {\n                //     this.$message({message: \"error！问卷未保存！\", duration: 1000});\n                // });\n            },\n            resetQuestionnaireTitle() {\n                this.questionnaire = {\n                    isBoxSelected: false,\n                    questionnaireTitle: \"请输入标题\",\n                    questionnaireId: this.$route.params.qid,\n                };\n            },\n            editTitle() {\n                this.questionnaire.isBoxSelected = true;\n            },\n            saveQuestionnaire() {\n                this.$http.post(\"/questionnaire/edit\", {\n\n                    questionnaire:\n                        {\n                            questionnaireId: parseInt(this.$route.params.qid),\n                            lessonNo: this.questionnaire.lessonNo,\n                            startTime: this.questionnaire.time[0].getTime(),\n                            endTime: this.questionnaire.time[1].getTime()\n                        },\n                    questionList: this.questionList,\n                }).then((res) => {\n                    let data = res.data;\n                    if (data.code === 0) {\n                        this.$message({message: \"问卷已保存\", duration: 1000});\n                    } else {\n                        this.$message({message: \"error！问卷未保存！\", duration: 1000});\n                    }\n                }).catch(() => {\n                    this.$message({message: \"error！问卷未保存！\", duration: 1000});\n                });\n                this.$router.back();\n            },\n            deleteQuestionnaire() {\n                this.deleteVisible = false;\n                this.$http.get('/questionnaire/deleteQuestionnaire', {\n                    questionnaireId: this.questionnaire.questionnaireId\n                }).then((response) => {\n                    console.log(response);\n                    this.$router.back();\n                    this.deleted = true;\n                    this.$message({message: \"问卷已删除\", duration: 1000});\n                })\n            },\n            releaseQuestionnaire() {\n                this.$http.post(\"/questionnaire/releaseQuestionnaire\", {\n                    questionList: this.questionList,\n                    questionnaire: this.questionnaire\n                })\n                    .then(() => {\n                        this.$message({message: \"问卷已发布\", duration: 1000});\n                    }).catch(() => {\n                    this.$message({message: \"error！问卷未发布！\", duration: 1000});\n                });\n                this.releaseVisible = true;\n            },\n            releaseEnd() {\n                this.releaseVisible = false;\n                this.$router.back();\n            },\n            reload() {\n                this.hackReset = false\n                this.$nextTick(() => {\n                    this.hackReset = true\n                })\n            },\n            copy() {\n                const clipboard = new Clipboard('.copy-link')\n                clipboard.on('success', e => {\n                    console.log('复制成功')\n                    this.$message({message: \"复制成功\", duration: 1000})\n                    // 释放内存\n                    clipboard.destroy()\n                })\n                clipboard.on('error', e => {\n                    // 不支持复制\n                    console.log('该浏览器不支持自动复制')\n                    // 释放内存\n                    clipboard.destroy()\n                })\n            },\n            fetchmylesson() {\n                let courseNo = ''\n                for (const t of this.mylessons) {\n                    if (t.lesson_code === this.questionnaire.lessonNo) {\n                        courseNo = t.course_code\n                    }\n                    this.$http.get(\"course/target/\" + courseNo, {}).then((res) => {\n                        const targetList = res.data.data.targets\n                        const resList = [];\n                        for (const t of targetList) {\n                            resList.push(t)\n                        }\n                        this.courseGoals = resList\n                    })\n                    console.log(this.courseGoals)\n                    this.reload()\n                }\n\n            },\n        },\n\n        created() {\n            this.questionnaire.questionnaireTitle = this.$route.params.title\n            console.log(this.$route.params.qid)\n            if (null != this.$route.params.qid ){\n              this.fetchData();\n            }\n        }\n    }\n</script>\n\n<style scoped>\n    .main-question-list {\n        height: 100%;\n        background-color: white;\n        box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\n    }\n\n    .add-question-inner {\n        width: 50%;\n        height: 50px;\n        padding-top: 25px;\n        text-align: center;\n        margin-left: auto;\n        margin-right: auto;\n        border-color: rgba(128, 128, 128, 0.5);\n        color: rgba(128, 128, 128, 0.5);\n        border-width: 2px;\n        border-style: dashed;\n        font-weight: bolder;\n        cursor: pointer;\n    }\n\n    .box-is-not-selected {\n        position: relative;\n    }\n\n    .box-is-not-selected-wrapper {\n        cursor: pointer;\n    }\n\n    .box-is-not-selected-wrapper:hover .box-is-not-selected {\n        filter: blur(8px);\n    }\n\n    .edit-icon {\n        display: none;\n    }\n\n    .box-is-not-selected-wrapper:hover .edit-icon {\n        display: inline;\n        height: 100%;\n        width: 100%;\n        background-color: rgba(179, 229, 252, 0.3);\n        position: absolute;\n        top: 0;\n        left: 0;\n    }\n\n    .el-icon-edit-outline {\n        position: absolute;\n        top: calc(50% - 30px);\n        left: calc(50% - 30px);\n        font-size: 60px;\n        color: rgba(128, 0, 128, 0.6);\n    }\n\n</style>\n"],"sourceRoot":"src/components/questionnaire"}]}