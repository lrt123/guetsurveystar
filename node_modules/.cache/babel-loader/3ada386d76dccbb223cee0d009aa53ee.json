{"remainingRequest":"F:\\github\\guetsurveystar\\node_modules\\babel-loader\\lib\\index.js!F:\\github\\guetsurveystar\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\github\\guetsurveystar\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\github\\guetsurveystar\\src\\components\\Analysis\\MainAnalysisList.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\github\\guetsurveystar\\src\\components\\Analysis\\MainAnalysisList.vue","mtime":1593309905220},{"path":"F:\\github\\guetsurveystar\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\github\\guetsurveystar\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"F:\\github\\guetsurveystar\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\github\\guetsurveystar\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZSI7CmltcG9ydCBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlciBmcm9tICJGOi9naXRodWIvZ3VldHN1cnZleXN0YXIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgQW5hbHlzaXNDYXJkIGZyb20gIi4vQW5hbHlzaXNDYXJkIjsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJNYWluQW5hbHlzaXNMaXN0IiwKICBjb21wb25lbnRzOiB7CiAgICBBbmFseXNpc0NhcmQ6IEFuYWx5c2lzQ2FyZAogIH0sCiAgbWV0aG9kczogewogICAgZmV0Y2hEYXRhOiBmdW5jdGlvbiBmZXRjaERhdGEoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB0aGlzLiRodHRwLmdldCgiL3F1ZXN0aW9ubmFpcmUvIiArIHRoaXMuJHJvdXRlLnBhcmFtcy5xaWQgKyAiL2FuYWx5emUiLCB7fSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgdmFyIGRhdGEgPSByZXMuZGF0YS5kYXRhOwogICAgICAgIF90aGlzLnF1ZXN0aW9ubmFpcmUudGl0bGUgPSBkYXRhLnRpdGxlOwogICAgICAgIF90aGlzLnF1ZXN0aW9ubmFpcmUuc3RhcnRUaW1lID0gZGF0YS5zdGFydF90aW1lOwogICAgICAgIF90aGlzLnF1ZXN0aW9ubmFpcmUuZW5kVGltZSA9IGRhdGEuZW5kX3RpbWU7CiAgICAgICAgdmFyIHRlbXAgPSBkYXRhLnF1ZXN0aW9uczsKICAgICAgICB2YXIgZGF0YUxpc3QgPSBbXTsKCiAgICAgICAgdmFyIF9pdGVyYXRvciA9IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyKHRlbXApLAogICAgICAgICAgICBfc3RlcDsKCiAgICAgICAgdHJ5IHsKICAgICAgICAgIGZvciAoX2l0ZXJhdG9yLnMoKTsgIShfc3RlcCA9IF9pdGVyYXRvci5uKCkpLmRvbmU7KSB7CiAgICAgICAgICAgIHZhciB0ID0gX3N0ZXAudmFsdWU7CgogICAgICAgICAgICB2YXIgX2l0ZXJhdG9yMiA9IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyKHQuaXRlbXMpLAogICAgICAgICAgICAgICAgX3N0ZXAyOwoKICAgICAgICAgICAgdHJ5IHsKICAgICAgICAgICAgICBmb3IgKF9pdGVyYXRvcjIucygpOyAhKF9zdGVwMiA9IF9pdGVyYXRvcjIubigpKS5kb25lOykgewogICAgICAgICAgICAgICAgdmFyIGkgPSBfc3RlcDIudmFsdWU7CiAgICAgICAgICAgICAgICBkYXRhTGlzdC5wdXNoKHsKICAgICAgICAgICAgICAgICAgJ25hbWUnOiBpLm15b3B0aW9uLAogICAgICAgICAgICAgICAgICAndmFsdWUnOiBpLmNvdW50CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0gY2F0Y2ggKGVycikgewogICAgICAgICAgICAgIF9pdGVyYXRvcjIuZShlcnIpOwogICAgICAgICAgICB9IGZpbmFsbHkgewogICAgICAgICAgICAgIF9pdGVyYXRvcjIuZigpOwogICAgICAgICAgICB9CgogICAgICAgICAgICBkYXRhTGlzdC5zb3J0KGZ1bmN0aW9uIChhLCBiKSB7CiAgICAgICAgICAgICAgcmV0dXJuIGEudmFsdWUgLSBiLnZhbHVlOwogICAgICAgICAgICB9KTsKICAgICAgICAgICAgZGF0YUxpc3QucHVzaCh7CiAgICAgICAgICAgICAgJ25hbWUnOiAnJywKICAgICAgICAgICAgICAnc3RhdGljJzogJ+aAu+iuoScsCiAgICAgICAgICAgICAgJ3N0YXRpY192YWx1ZSc6IHQudG90YWwKICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIF90aGlzLnF1ZXN0aW9ubmFpcmUuZmlsbENvdW50ID0gdC50b3RhbDsKCiAgICAgICAgICAgIF90aGlzLnF1ZXN0aW9uTGlzdC5wdXNoKHsKICAgICAgICAgICAgICBxdWVzdGlvbklkOiB0LmluZGV4LAogICAgICAgICAgICAgIHF1ZXN0aW9uVGl0bGU6IHQuZGVzYywKICAgICAgICAgICAgICBxdWVzdGlvblR5cGU6IHQudHlwZSwKICAgICAgICAgICAgICBxdWVzdGlvblZhbHVlTGlzdDogZGF0YUxpc3QKICAgICAgICAgICAgfSk7CgogICAgICAgICAgICBkYXRhTGlzdCA9IFtdOwogICAgICAgICAgfQogICAgICAgIH0gY2F0Y2ggKGVycikgewogICAgICAgICAgX2l0ZXJhdG9yLmUoZXJyKTsKICAgICAgICB9IGZpbmFsbHkgewogICAgICAgICAgX2l0ZXJhdG9yLmYoKTsKICAgICAgICB9CgogICAgICAgIGNvbnNvbGUubG9nKF90aGlzLnF1ZXN0aW9uTGlzdCk7CiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uICgpIHsKICAgICAgICBfdGhpcy4kbWVzc2FnZSh7CiAgICAgICAgICBtZXNzYWdlOiAiZXJyb3LvvIHml6DmlbDmja7vvIEiLAogICAgICAgICAgZHVyYXRpb246IDEwMDAKICAgICAgICB9KTsKICAgICAgfSk7CiAgICB9LAogICAgZGV0YWlsOiBmdW5jdGlvbiBkZXRhaWwoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgdGhpcy4kaHR0cC5nZXQoIi9xdWVzdGlvbm5haXJlLyIgKyB0aGlzLiRyb3V0ZS5wYXJhbXMucWlkICsgIi9hbmFseXplL2xlc3NvbiIsIHt9KS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICBpZiAocmVzLmRhdGEuY29kZSA9PT0gMCkgewogICAgICAgICAgdmFyIGRhdGEgPSByZXMuZGF0YS5kYXRhOwogICAgICAgICAgX3RoaXMyLmRldGFpbEluZm8gPSBkYXRhLmRhdGE7CiAgICAgICAgICBfdGhpczIuZGV0YWlsVmlzaWJsZSA9IHRydWU7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIF90aGlzMi4kbWVzc2FnZSh7CiAgICAgICAgICAgIG1lc3NhZ2U6ICJlcnJvciEg6K+75Y+W5aSx6LSl77yBIiwKICAgICAgICAgICAgZHVyYXRpb246IDEwMDAKICAgICAgICAgIH0pOwogICAgICAgIH0KICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKHJlcykgewogICAgICAgIF90aGlzMi4kbWVzc2FnZSh7CiAgICAgICAgICBtZXNzYWdlOiAiZXJyb3IhIOacjeWKoeerr+aXoOWTjeW6lO+8gSIsCiAgICAgICAgICBkdXJhdGlvbjogMTAwMAogICAgICAgIH0pOwogICAgICB9KTsKICAgIH0sCiAgICB0YWJDbGljazogZnVuY3Rpb24gdGFiQ2xpY2sodGFiLCBldmVudCkgewogICAgICBpZiAodGFiLm5hbWUgPT09ICdkZXRhaWwnKSB7CiAgICAgICAgdGhpcy5kZXRhaWwoKTsKICAgICAgfSBlbHNlIGlmICh0YWIubmFtZSA9PT0gJ29wdGlvbicpIHsKICAgICAgICB0aGlzLmRldGFpbFZpc2libGUgPSBmYWxzZTsKICAgICAgfQogICAgfSwKICAgIGV4cG9ydFRvRXhjZWw6IGZ1bmN0aW9uIGV4cG9ydFRvRXhjZWwoKSB7CiAgICAgIHZhciBfdGhpczMgPSB0aGlzOwoKICAgICAgLy9leGNlbOaVsOaNruWvvOWHugogICAgICByZXF1aXJlLmVuc3VyZShbXSwgZnVuY3Rpb24gKCkgewogICAgICAgIHZhciBfcmVxdWlyZSA9IHJlcXVpcmUoJy4uLy4uL2Fzc2V0cy9qcy9FeHBvcnQyRXhjZWwnKSwKICAgICAgICAgICAgZXhwb3J0X2pzb25fdG9fZXhjZWwgPSBfcmVxdWlyZS5leHBvcnRfanNvbl90b19leGNlbDsKCiAgICAgICAgdmFyIHRIZWFkZXIgPSBbJ+WtpuWPtycsICflp5PlkI0nLCAn5LiT5LiaJywgJ+W+l+WIhiddOwogICAgICAgIHZhciBmaWx0ZXJWYWwgPSBbJ2FjY291bnQnLCAnbmFtZScsICdtYWpvcicsICdzY29yZSddOwogICAgICAgIHZhciBsaXN0ID0gX3RoaXMzLmRldGFpbEluZm87CgogICAgICAgIHZhciBkYXRhID0gX3RoaXMzLmZvcm1hdEpzb24oZmlsdGVyVmFsLCBsaXN0KTsKCiAgICAgICAgZXhwb3J0X2pzb25fdG9fZXhjZWwodEhlYWRlciwgZGF0YSwgX3RoaXMzLnF1ZXN0aW9ubmFpcmUudGl0bGUgKyAnLee7n+iuoeaDheWGtScpOwogICAgICB9KTsKICAgIH0sCiAgICBmb3JtYXRKc29uOiBmdW5jdGlvbiBmb3JtYXRKc29uKGZpbHRlclZhbCwganNvbkRhdGEpIHsKICAgICAgcmV0dXJuIGpzb25EYXRhLm1hcChmdW5jdGlvbiAodikgewogICAgICAgIHJldHVybiBmaWx0ZXJWYWwubWFwKGZ1bmN0aW9uIChqKSB7CiAgICAgICAgICByZXR1cm4gdltqXTsKICAgICAgICB9KTsKICAgICAgfSk7CiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdGhpcy5mZXRjaERhdGEoKTsKICAgIGNvbnNvbGUubG9nKDEyMywgdGhpcy4kcm91dGUucGFyYW1zKTsKICAgIHZhciB0eXBlID0gdGhpcy4kcm91dGUucGFyYW1zLnR5cGU7CgogICAgaWYgKHR5cGUgIT09IDEpIHsKICAgICAgdGhpcy50YWJWaXNpYmxlID0gZmFsc2U7CiAgICB9CgogICAgY29uc29sZS5sb2codGhpcy4kcm91dGUucGFyYW1zLnR5cGUpOwogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHF1ZXN0aW9ubmFpcmU6IHsKICAgICAgICB0aXRsZTogJ+i/meaYr+S4gOS4quagh+mimCcsCiAgICAgICAgc3RhdHVzOiAn5bey5a6M5oiQJywKICAgICAgICBzdGFydFRpbWU6ICIyMDIwLTYtMTggMTk6MDA6MjUiLAogICAgICAgIGVuZFRpbWU6ICIyMDIwLTctMSAyMDowMDowMCIsCiAgICAgICAgZmlsbENvdW50OiAyOTkKICAgICAgfSwKICAgICAgcXVlc3Rpb25MaXN0OiBbXSwKICAgICAgc2hvd0RldGFpbDogZmFsc2UsCiAgICAgIGRldGFpbFZpc2libGU6IGZhbHNlLAogICAgICB0YWJWaXNpYmxlOiB0cnVlLAogICAgICBzZWxlY3RlZFRhYjogJ29wdGlvbicsCiAgICAgIGRldGFpbEluZm86IFtdCiAgICB9OwogIH0KfTs="},{"version":3,"sources":["MainAnalysisList.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div>\n        <div class=\"main-analysis-list\">\n            <el-card>\n                <h1>{{questionnaire.title}}</h1>\n                <div class=\"description-box\">\n                    <div>\n                        <b>问卷状态：</b>{{questionnaire.status}}\n                    </div>\n                    <div>\n                        <b>填写人数：</b>{{questionnaire.fillCount}}\n                    </div>\n                    <div>\n                        <b>发布时间：</b>{{questionnaire.startTime}}\n                    </div>\n                    <div>\n                        <b>截止时间：</b>{{questionnaire.endTime}}\n                    </div>\n                    <el-tabs v-if=\"tabVisible\" v-model=\"selectedTab\" @tab-click=\"tabClick\">\n                        <el-tab-pane label=\"查看选项统计\" name=\"option\"></el-tab-pane>\n                        <el-tab-pane label=\"课程目标达成情况\" name=\"detail\"></el-tab-pane>\n                    </el-tabs>\n                </div>\n                <el-button v-if=\"detailVisible\" type=\"primary\" @click=\"exportToExcel\" round id=\"export_btn\">导出</el-button>\n            </el-card>\n            <AnalysisCard\n                    v-if=\"detailVisible===false\"\n                    v-for=\"(item,index) in questionList\"\n                    :key=\"index\"\n                    :question-index=\"index+1\"\n                    :question-id=\"item.questionId\"\n                    :question-title=\"item.questionTitle\"\n                    :question-type=\"item.questionType\"\n                    :question-value-list=\"item.questionValueList\"\n            >\n            </AnalysisCard>\n            <div v-if=\"detailVisible\">\n\n                <el-table\n                        :data=\"detailInfo\"\n                        :default-sort=\"{prop:'account',order:'ascending'}\"\n                >\n                    <el-table-column\n                            prop=\"account\"\n                            label=\"学号\">\n                    </el-table-column>\n                    <el-table-column\n                            prop=\"name\"\n                            label=\"姓名\">\n                    </el-table-column>\n                    <el-table-column\n                            prop=\"major\"\n                            label=\"专业\">\n                    </el-table-column>\n                    <el-table-column\n                            prop=\"score\"\n                            label=\"得分\">\n                    </el-table-column>\n                </el-table>\n\n            </div>\n\n        </div>\n    </div>\n\n</template>\n\n<script>\n    import AnalysisCard from \"./AnalysisCard\";\n\n    export default {\n        name: \"MainAnalysisList\",\n        components: {AnalysisCard},\n        methods: {\n            fetchData() {\n              this.$http.get(\"/questionnaire/\"+this.$route.params.qid+\"/analyze\", {\n              }).then((res) => {\n                const data = res.data.data;\n                this.questionnaire.title = data.title\n                  this.questionnaire.startTime = data.start_time\n                  this.questionnaire.endTime = data.end_time\n                const temp = data.questions;\n\n                let dataList = [];\n                for (const t of temp){\n                  for (const i of t.items){\n                    dataList.push({'name': i.myoption, 'value': i.count})\n                  }\n                  dataList.sort((a, b) => {\n                    return a.value - b.value\n                  });\n                  dataList.push({'name':'','static': '总计', 'static_value': t.total})\n                    this.questionnaire.fillCount = t.total\n                    this.questionList.push(\n                        {\n                            questionId:t.index,\n                            questionTitle:t.desc,\n                            questionType:t.type,\n                            questionValueList:dataList\n                        }\n                    )\n                  dataList = []\n                }\n                console.log(this.questionList)\n\n              }).catch(() => {\n                this.$message({message: \"error！无数据！\", duration: 1000})\n              })\n            },\n            detail(){\n                    this.$http.get(\"/questionnaire/\"+this.$route.params.qid+\"/analyze/lesson\",{\n                    }).then((res) => {\n                        if (res.data.code === 0){\n                            let data = res.data.data\n                            this.detailInfo = data.data\n                            this.detailVisible = true\n                        }else{\n                            this.$message({message: \"error! 读取失败！\", duration: 1000})\n                        }\n                    }).catch(res => {\n                        this.$message({message: \"error! 服务端无响应！\", duration: 1000})\n                    });\n\n            },\n            tabClick(tab,event){\n                if (tab.name === 'detail'){\n                    this.detail()\n                }else if (tab.name === 'option'){\n                    this.detailVisible = false\n                }\n            },\n             exportToExcel() {\n              //excel数据导出\n             require.ensure([], () => {\n                   const {\n                     export_json_to_excel\n                       } = require('../../assets/js/Export2Excel');\n                   const tHeader = ['学号','姓名', '专业', '得分'];\n                   const filterVal = ['account','name', 'major', 'score'];\n                   const list = this.detailInfo;\n                   const data = this.formatJson(filterVal, list);\n                   export_json_to_excel(tHeader, data, this.questionnaire.title+'-统计情况');\n                 })\n             },\n             formatJson(filterVal, jsonData) {\n                return jsonData.map(v => filterVal.map(j => v[j]))\n                   }\n\n    },\n        mounted() {\n            this.fetchData();\n            console.log(123,this.$route.params)\n                let type = this.$route.params.type\n                if (type !== 1){\n                    this.tabVisible = false\n                }\n                console.log(this.$route.params.type)\n        },\n        data: function () {\n            return {\n                questionnaire: {\n                    title: '这是一个标题',\n                    status: '已完成',\n                    startTime: \"2020-6-18 19:00:25\",\n                    endTime: \"2020-7-1 20:00:00\",\n                    fillCount: 299,\n                },\n                questionList: [],\n                showDetail: false,\n                detailVisible: false,\n                tabVisible: true,\n                selectedTab:'option',\n                detailInfo: []\n            }\n        }\n    }\n</script>\n\n<style scoped>\n    .main-analysis-list {\n        width: 70%;\n        margin: auto;\n    }\n\n    .description-box {\n        text-align: left;\n        padding-left: 10%;\n        line-height: 30px;\n        font-size: 14px;\n    }\n    #export_btn{\n        margin-top: 10px;\n        margin-bottom: 10px;\n        float: right;\n    }\n</style>\n"],"sourceRoot":"src/components/Analysis"}]}